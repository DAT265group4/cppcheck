acceptFile call:[acceptFile] noreturn:[acceptFile]
operator()
operator()
contains call:[begin,end,find] noreturn:[end]
contains call:[begin,end,find] noreturn:[end]
contains call:[begin,end,find] noreturn:[end]
operator()
endsWith call:[back,empty]
endsWith call:[compare,return,size]
endsWith call:[endsWith] noreturn:[endsWith]
isPrefixStringCharLiteral call:[compare,endsWith,length,size]
isStringCharLiteral call:[isPrefixStringCharLiteral]
isStringLiteral call:[isStringCharLiteral] noreturn:[isStringCharLiteral]
isCharLiteral call:[isStringCharLiteral] noreturn:[isStringCharLiteral]
getStringCharLiteral call:[find,size,substr] noreturn:[substr]
getStringLiteral call:[getStringCharLiteral,isStringLiteral] noreturn:[getStringCharLiteral]
getCharLiteral call:[getStringCharLiteral,isCharLiteral] noreturn:[getStringCharLiteral]
getOrdinalText
caseInsensitiveFilesystem
toNativeSeparators call:[begin,end,replace]
fromNativeSeparators call:[begin,end,replace]
simplifyPath call:[simplifyPath] noreturn:[simplifyPath]
getPathFromFilename call:[find_last_of,substr] noreturn:[substr]
sameFileName call:[caseInsensitiveFilesystem,caseInsensitiveStringCompare]
tolowerWrapper call:[tolower] noreturn:[tolower]
removeQuotationMarks call:[begin,end,erase,remove]
getFilenameExtension call:[begin,caseInsensitiveFilesystem,end,find_last_of,substr,transform] noreturn:[transform]
getFilenameExtensionInLowerCase call:[begin,end,getFilenameExtension,transform]
getCurrentPath global:[emptyString] call:[getcwd,string] noreturn:[string]
isAbsolute call:[empty,toNativeSeparators]
getRelativePath call:[compare,empty,endsWith,length,size,substr] noreturn:[substr]
isC call:[getFilenameExtension]
isCPP call:[getFilenameExtension,getFilenameExtensionInLowerCase]
acceptFile call:[end,find,getFilenameExtension,isC,isCPP,isHeader]
isHeader call:[compare,getFilenameExtensionInLowerCase,return] noreturn:[return]
getAbsoluteFilePath call:[c_str,free,realpath]
stripDirectoryPart call:[rfind,substr] noreturn:[substr]
fileExists call:[c_str,f,is_open] noreturn:[is_open]
