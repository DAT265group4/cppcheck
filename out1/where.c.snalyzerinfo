sqlite3WhereOutputRowCount
sqlite3WhereIsDistinct
sqlite3WhereIsOrdered
sqlite3WhereOrderByLimitOptLabel call:[assert]
sqlite3WhereContinueLabel call:[assert]
sqlite3WhereBreakLabel
sqlite3WhereOkOnePass call:[memcpy,sizeof,sqlite3DebugPrintf] noreturn:[sqlite3DebugPrintf]
whereOrMove call:[memcpy,sizeof] noreturn:[memcpy]
whereOrInsert
sqlite3WhereGetMask call:[MASKBIT,assert,sizeof] noreturn:[MASKBIT]
createMask call:[ArraySize,assert]
whereScanNext call:[ArraySize,ExprHasProperty,assert,sqlite3BinaryCompareCollSeq,sqlite3ExprCompareSkip,sqlite3ExprSkipCollate,sqlite3IndexAffinityOk,sqlite3StrICmp,testcase,while]
whereScanInitIndexExpr call:[sqlite3ExprAffinity,whereScanNext] noreturn:[whereScanNext]
whereScanInit call:[whereScanInitIndexExpr,whereScanNext] noreturn:[whereScanInitIndexExpr,whereScanNext]
sqlite3WhereFindTerm call:[testcase,whereScanInit,whereScanNext] noreturn:[whereScanNext]
findIndexCol call:[sqlite3ExprNNCollSeq,sqlite3ExprSkipCollate,sqlite3StrICmp]
indexColumnNotNull call:[assert]
isDistinctRedundant call:[IsUniqueIndex,findIndexCol,indexColumnNotNull,sqlite3ExprSkipCollate,sqlite3WhereFindTerm]
estLog call:[sqlite3LogEst]
translateColumnToCopy call:[sqlite3VdbeCurrentAddr,sqlite3VdbeGetOp]
TRACE_IDX_INPUTS call:[sqlite3DebugPrintf] noreturn:[sqlite3DebugPrintf]
TRACE_IDX_OUTPUTS call:[sqlite3DebugPrintf] noreturn:[sqlite3DebugPrintf]
termCanDriveIndex call:[ExprHasProperty,sqlite3IndexAffinityOk,testcase]
constructAutomaticIndex call:[ExprHasProperty,MASKBIT,MIN,VdbeComment,VdbeCoverage,assert,sqlite3AllocateIndexObject,sqlite3BinaryCompareCollSeq,sqlite3ExprAnd,sqlite3ExprDelete,sqlite3ExprDup,sqlite3ExprIfFalse,sqlite3ExprIsTableConstant,sqlite3GenerateIndexKey,sqlite3GetTempReg,sqlite3ReleaseTempReg,sqlite3VdbeAddOp0,sqlite3VdbeAddOp1,sqlite3VdbeAddOp2,sqlite3VdbeAddOp3,sqlite3VdbeChangeP2,sqlite3VdbeChangeP5,sqlite3VdbeGoto,sqlite3VdbeJumpHere,sqlite3VdbeMakeLabel,sqlite3VdbeResolveLabel,sqlite3VdbeSetP4KeyInfo,sqlite3_log,termCanDriveIndex,testcase,translateColumnToCopy,whereLoopResize] noreturn:[VdbeComment,VdbeCoverage,sqlite3ExprAnd,sqlite3ExprDelete,sqlite3VdbeResolveLabel]
allocateIndexInfo call:[ExprHasProperty,IsPowerOfTwo,assert,sizeof,sqlite3DbMallocZero,sqlite3ErrorMsg,sqlite3ExprIsVector,testcase]
vtabBestIndex call:[TRACE_IDX_INPUTS,TRACE_IDX_OUTPUTS,sqlite3ErrStr,sqlite3ErrorMsg,sqlite3GetVTable,sqlite3OomFault,sqlite3_free,xBestIndex] noreturn:[sqlite3ErrorMsg,sqlite3OomFault]
whereRangeAdjust call:[assert,sqlite3LogEst] noreturn:[assert]
whereRangeScanEst call:[UNUSED_PARAMETER,WHERETRACE,assert,whereRangeAdjust] noreturn:[WHERETRACE]
whereTermPrint call:[ExprHasProperty,memcpy,sizeof,sqlite3DebugPrintf,sqlite3TreeViewExpr,sqlite3_snprintf] noreturn:[sqlite3DebugPrintf,sqlite3TreeViewExpr,sqlite3_snprintf]
sqlite3WhereClausePrint call:[whereTermPrint] noreturn:[whereTermPrint]
whereLoopPrint call:[sqlite3DebugPrintf,sqlite3Strlen30,sqlite3_free,sqlite3_mprintf,strncmp,whereTermPrint] noreturn:[sqlite3DebugPrintf,sqlite3_free,sqlite3_mprintf,whereTermPrint]
whereLoopInit call:[ArraySize]
whereLoopClearUnion call:[sqlite3DbFree,sqlite3DbFreeNN,sqlite3_free]
whereLoopClear call:[sqlite3DbFreeNN,whereLoopClearUnion,whereLoopInit] noreturn:[sqlite3DbFreeNN,whereLoopInit]
whereLoopResize call:[memcpy,sizeof,sqlite3DbFreeNN,sqlite3DbMallocRawNN] noreturn:[sqlite3DbFreeNN]
whereLoopXfer call:[memcpy,memset,sizeof,whereLoopClearUnion,whereLoopResize]
whereLoopDelete call:[sqlite3DbFreeNN,whereLoopClear] noreturn:[sqlite3DbFreeNN]
whereInfoFree call:[assert,sqlite3DbFree,sqlite3DbFreeNN,sqlite3WhereClauseClear,whereLoopDelete] noreturn:[sqlite3DbFree,sqlite3DbFreeNN,whereLoopDelete]
whereLoopCheaperProperSubset
whereLoopAdjustCost call:[WHERETRACE,whereLoopCheaperProperSubset]
whereLoopFindLesser call:[assert]
whereLoopInsert call:[WHERETRACE,sizeof,sqlite3DbMallocRawNN,sqlite3DebugPrintf,whereLoopAdjustCost,whereLoopDelete,whereLoopFindLesser,whereLoopInit,whereLoopPrint,whereLoopXfer,whereOrInsert] noreturn:[sqlite3DebugPrintf,whereLoopDelete,whereLoopPrint]
whereLoopOutputAdjust call:[assert,sqlite3ExprIsInteger,testcase]
whereRangeVectorLen call:[MIN,sqlite3BinaryCompareCollSeq,sqlite3CompareAffinity,sqlite3ExprAffinity,sqlite3ExprVectorSize,sqlite3StrICmp,sqlite3TableColumnAffinity,testcase]
whereLoopAddBtreeIndex call:[ALWAYS,ExprHasProperty,IsUniqueIndex,OptimizationEnabled,WHERETRACE,assert,estLog,indexColumnNotNull,sqlite3LogEst,sqlite3LogEstAdd,testcase,whereLoopAddBtreeIndex,whereLoopInsert,whereLoopOutputAdjust,whereLoopResize,whereRangeScanEst,whereRangeVectorLen,whereScanInit,whereScanNext] noreturn:[WHERETRACE,assert,sqlite3LogEstAdd,whereLoopAddBtreeIndex,whereRangeScanEst]
indexMightHelpWithOrderBy call:[sqlite3ExprCompareSkip,sqlite3ExprSkipCollate]
whereUsablePartialIndex call:[ExprHasProperty,sqlite3ExprImpliesExpr,whereUsablePartialIndex]
whereLoopAddBtree call:[HasRowid,IsVirtual,OptimizationEnabled,assert,estLog,indexMightHelpWithOrderBy,memset,sizeof,sqlite3ExprCoveredByIndex,sqlite3LogEst,sqlite3LogEstAdd,termCanDriveIndex,testcase,whereLoopAddBtreeIndex,whereLoopInsert,whereLoopOutputAdjust,whereUsablePartialIndex] noreturn:[sqlite3LogEstAdd,whereLoopInsert]
whereLoopAddVirtualOne call:[WHERETRACE,assert,memset,sizeof,sqlite3ErrorMsg,sqlite3LogEst,sqlite3LogEstFromDouble,sqlite3_free,testcase,vtabBestIndex,whereLoopInsert] noreturn:[assert]
sqlite3_vtab_collation call:[sqlite3BinaryCompareCollSeq] noreturn:[sqlite3BinaryCompareCollSeq]
whereLoopAddVirtual call:[IsVirtual,WHERETRACE,allocateIndexInfo,assert,sqlite3DbFree,sqlite3DbFreeNN,sqlite3_free,whereLoopAddVirtualOne,whereLoopResize] noreturn:[sqlite3_free,whereLoopAddVirtualOne]
whereLoopAddOr call:[IsVirtual,WHERETRACE,assert,memset,sizeof,sqlite3LogEstAdd,sqlite3WhereClausePrint,whereLoopAddBtree,whereLoopAddOr,whereLoopAddVirtual,whereLoopInsert,whereOrInsert,whereOrMove] noreturn:[WHERETRACE,sqlite3WhereClausePrint,whereLoopAddBtree,whereLoopAddOr,whereLoopAddVirtual,whereLoopInsert,whereOrInsert]
whereLoopAddAll call:[IsVirtual,sqlite3WhereGetMask,sqlite3_log,whereLoopAddBtree,whereLoopAddOr,whereLoopAddVirtual,whereLoopClear,whereLoopInit] noreturn:[sqlite3WhereGetMask,whereLoopAddBtree,whereLoopAddOr,whereLoopAddVirtual]
wherePathSatisfiesOrderBy call:[ALWAYS,HasRowid,IsUniqueIndex,MASKBIT,OptimizationDisabled,assert,return,sqlite3ExprCollSeqMatch,sqlite3ExprCompareSkip,sqlite3ExprIsConstant,sqlite3ExprNNCollSeq,sqlite3ExprSkipCollate,sqlite3StrICmp,sqlite3WhereExprUsage,sqlite3WhereFindTerm,testcase] noreturn:[MASKBIT,testcase]
sqlite3WhereIsSorted call:[assert]
wherePathName
whereSortingCost call:[assert,estLog,sqlite3LogEst]
wherePathSolver call:[MIN,WHERETRACE,assert,memcpy,memset,sizeof,sqlite3DbFreeNN,sqlite3DbMallocRawNN,sqlite3DebugPrintf,sqlite3ErrorMsg,sqlite3LogEst,sqlite3LogEstAdd,testcase,wherePathName,wherePathSatisfiesOrderBy,whereSortingCost] noreturn:[WHERETRACE,memset,sqlite3DebugPrintf,wherePathSatisfiesOrderBy,whereSortingCost]
whereShortCut call:[ArraySize,IsUniqueIndex,IsVirtual,assert,sqlite3WhereFindTerm,testcase]
exprNodeIsDeterministic call:[ExprHasProperty]
exprIsDeterministic call:[memset,sizeof,sqlite3WalkExpr]
sqlite3WhereBegin call:[ALWAYS,EIGHT_BYTE_ALIGNMENT,ExplainQueryPlan,ExprHasProperty,HasRowid,IsPrimaryKeyIndex,IsVirtual,NEVER,OptimizationDisabled,OptimizationEnabled,ROUND8,SQLITE_INT_TO_PTR,VdbeComment,VdbeModuleComment,WHERETRACE,assert,constructAutomaticIndex,createMask,exprIsDeterministic,initMaskSet,isDistinctRedundant,memmove,memset,offsetof,sizeof,sqlite3CodeVerifySchema,sqlite3DbFree,sqlite3DbMallocRawNN,sqlite3DebugPrintf,sqlite3ErrorMsg,sqlite3ExprIfFalse,sqlite3GetVTable,sqlite3OpenTable,sqlite3SchemaToIndex,sqlite3TableLock,sqlite3TreeViewSelect,sqlite3VdbeAddOp3,sqlite3VdbeAddOp4,sqlite3VdbeChangeP4,sqlite3VdbeChangeP5,sqlite3VdbeCurrentAddr,sqlite3VdbeMakeLabel,sqlite3VdbeSetP4KeyInfo,sqlite3WhereAddScanStatus,sqlite3WhereClauseInit,sqlite3WhereClausePrint,sqlite3WhereCodeOneLoopStart,sqlite3WhereExplainOneScan,sqlite3WhereExprAnalyze,sqlite3WhereExprListUsage,sqlite3WhereSplit,sqlite3WhereTabFuncArgs,testcase,whereInfoFree,whereLoopAddAll,whereLoopInit,whereLoopPrint,wherePathSolver,whereShortCut,while] noreturn:[ExplainQueryPlan,VdbeComment,assert,memmove,sqlite3CodeVerifySchema,sqlite3DebugPrintf,sqlite3TableLock,sqlite3TreeViewSelect,sqlite3VdbeAddOp4,sqlite3VdbeChangeP5,sqlite3WhereAddScanStatus,sqlite3WhereClausePrint,sqlite3WhereExprListUsage,sqlite3WhereTabFuncArgs,whereInfoFree,whereLoopPrint,while]
sqlite3WhereEnd call:[HasRowid,VdbeComment,VdbeCoverage,VdbeCoverageIf,VdbeModuleComment,assert,sqlite3ColumnOfIndex,sqlite3PrimaryKeyIndex,sqlite3VdbeAddOp1,sqlite3VdbeAddOp2,sqlite3VdbeAddOp3,sqlite3VdbeAddOp4Int,sqlite3VdbeChangeP5,sqlite3VdbeCurrentAddr,sqlite3VdbeGetOp,sqlite3VdbeGoto,sqlite3VdbeJumpHere,sqlite3VdbeResolveLabel,testcase,translateColumnToCopy,whereInfoFree] noreturn:[VdbeCoverage,VdbeCoverageIf,VdbeModuleComment,assert,sqlite3VdbeAddOp1,sqlite3VdbeAddOp2,sqlite3VdbeAddOp3,sqlite3VdbeGoto,sqlite3VdbeJumpHere,sqlite3VdbeResolveLabel]
