CWE
Check
Check call:[instances,remove] noreturn:[remove]
name
FileInfo
FileInfo
toString call:[string] noreturn:[string]
getFileInfo
loadFileInfoFromXml
analyseWholeProgram
reportError call:[CWE,reportError] noreturn:[reportError]
reportError call:[callstack,reportError] noreturn:[reportError]
reportError call:[CWE,reportError] noreturn:[reportError]
isInt
isFloat
getDoubleValue call:[isFloat]
toString call:[str] noreturn:[str]
operator()
operator()
contains call:[begin,end,find] noreturn:[end]
contains call:[begin,end,find] noreturn:[end]
contains call:[begin,end,find] noreturn:[end]
operator()
endsWith call:[back,empty]
endsWith call:[compare,return,size]
endsWith call:[endsWith] noreturn:[endsWith]
isPrefixStringCharLiteral call:[compare,endsWith,length,size]
isStringCharLiteral call:[isPrefixStringCharLiteral]
isStringLiteral call:[isStringCharLiteral] noreturn:[isStringCharLiteral]
isCharLiteral call:[isStringCharLiteral] noreturn:[isStringCharLiteral]
getStringCharLiteral call:[find,size,substr] noreturn:[substr]
getStringLiteral call:[getStringCharLiteral,isStringLiteral] noreturn:[getStringCharLiteral]
getCharLiteral call:[getStringCharLiteral,isCharLiteral] noreturn:[getStringCharLiteral]
getOrdinalText
FwdAnalysis
Result
Result
operator()
operator()
operator()
operator() call:[abs]
operator()
Value
equalValue call:[sameToken]
visitValue call:[f]
operator() call:[compare] noreturn:[compare]
operator() call:[bind,move,ref,visitValue] noreturn:[visitValue]
compareValue call:[assert,bind,isSymbolicValue,move,ref,sameToken,visitValue]
operator== call:[equalValue]
operator!=
equalTo call:[bind,ref,visitValue]
decreaseRange call:[visitValue] noreturn:[visitValue]
invertBound
invertRange call:[decreaseRange,invertBound] noreturn:[decreaseRange]
isIntValue
isTokValue
isFloatValue
isMovedValue
isUninitValue
isContainerSizeValue
isLifetimeValue
isBufferSizeValue
isIteratorValue
isIteratorStartValue
isIteratorEndValue
isSymbolicValue
isLocalLifetimeValue
isArgumentLifetimeValue
isSubFunctionLifetimeValue
isNonValue call:[isLifetimeValue,isMovedValue,isUninitValue] noreturn:[isLifetimeValue]
setKnown
isKnown
setPossible
isPossible
isImpossible
setImpossible
setInconclusive
isInconclusive
changeKnownToPossible call:[isKnown]
errorSeverity
LifetimeToken
LifetimeToken
LifetimeToken
setAddressOf
setInconclusive
isClass call:[setFlag] noreturn:[setFlag]
isFunction call:[setFlag] noreturn:[setFlag]
isVariable call:[setFlag] noreturn:[setFlag]
isAlias call:[setFlag] noreturn:[setFlag]
isSpecialization call:[setFlag] noreturn:[setFlag]
isPartialSpecialization call:[setFlag] noreturn:[setFlag]
isForwardDeclaration call:[setFlag] noreturn:[setFlag]
isVariadic call:[setFlag] noreturn:[setFlag]
isFriend call:[setFlag] noreturn:[setFlag]
getFlag call:[return] noreturn:[return]
setFlag
operator==
token
token
scope
name
fullName
nameToken
paramEnd
paramEnd
isClass call:[getFlag] noreturn:[getFlag]
isFunction call:[getFlag] noreturn:[getFlag]
isVariable call:[getFlag] noreturn:[getFlag]
isAlias call:[getFlag] noreturn:[getFlag]
isSpecialization call:[getFlag] noreturn:[getFlag]
isPartialSpecialization call:[getFlag] noreturn:[getFlag]
isForwardDeclaration call:[getFlag] noreturn:[getFlag]
isVariadic call:[getFlag] noreturn:[getFlag]
isFriend call:[getFlag] noreturn:[getFlag]
isSameFamily call:[return]
ScopeInfo2
TokenImpl
str call:[update_property_info] noreturn:[update_property_info]
str
tokAt call:[tokAt]
linkAt call:[linkAt]
simpleMatch call:[simpleMatch] noreturn:[simpleMatch]
valueType
argumentType call:[Match,astParent] noreturn:[astParent]
tokType
tokType call:[setFlag] noreturn:[setFlag]
isKeyword
isName call:[getFlag] noreturn:[getFlag]
isNameOnly
isLiteral call:[getFlag] noreturn:[getFlag]
isNumber
isEnumerator
isOp call:[isAssignmentOp,isConstOp,return] noreturn:[return]
isConstOp call:[isArithmeticalOp,return] noreturn:[return]
isExtendedOp call:[isConstOp]
isArithmeticalOp
isComparisonOp
isAssignmentOp
isBoolean
isIncDecOp
isBinaryOp call:[astOperand1,astOperand2]
isUnaryOp call:[astOperand1,astOperand2]
flags
flags
isUnsigned call:[getFlag] noreturn:[getFlag]
isUnsigned call:[setFlag] noreturn:[setFlag]
isSigned call:[getFlag] noreturn:[getFlag]
isSigned call:[setFlag] noreturn:[setFlag]
isPointerCompare call:[getFlag] noreturn:[getFlag]
isPointerCompare call:[setFlag] noreturn:[setFlag]
isLong call:[getFlag] noreturn:[getFlag]
isLong call:[setFlag] noreturn:[setFlag]
isStandardType call:[getFlag] noreturn:[getFlag]
isStandardType call:[setFlag] noreturn:[setFlag]
isExpandedMacro call:[getFlag] noreturn:[getFlag]
isExpandedMacro call:[setFlag] noreturn:[setFlag]
isCast call:[getFlag] noreturn:[getFlag]
isCast call:[setFlag] noreturn:[setFlag]
isAttributeConstructor call:[getFlag] noreturn:[getFlag]
isAttributeConstructor call:[setFlag] noreturn:[setFlag]
isAttributeDestructor call:[getFlag] noreturn:[getFlag]
isAttributeDestructor call:[setFlag] noreturn:[setFlag]
isAttributeUnused call:[getFlag] noreturn:[getFlag]
isAttributeUnused call:[setFlag] noreturn:[setFlag]
isAttributeUsed call:[getFlag] noreturn:[getFlag]
isAttributeUsed call:[setFlag] noreturn:[setFlag]
isAttributePure call:[getFlag] noreturn:[getFlag]
isAttributePure call:[setFlag] noreturn:[setFlag]
isAttributeConst call:[getFlag] noreturn:[getFlag]
isAttributeConst call:[setFlag] noreturn:[setFlag]
isAttributeNoreturn call:[getFlag] noreturn:[getFlag]
isAttributeNoreturn call:[setFlag] noreturn:[setFlag]
isAttributeNothrow call:[getFlag] noreturn:[getFlag]
isAttributeNothrow call:[setFlag] noreturn:[setFlag]
isAttributePacked call:[getFlag] noreturn:[getFlag]
isAttributePacked call:[setFlag] noreturn:[setFlag]
isAttributeNodiscard call:[getFlag] noreturn:[getFlag]
isAttributeNodiscard call:[setFlag] noreturn:[setFlag]
isAttributeMaybeUnused call:[getFlag] noreturn:[getFlag]
isAttributeMaybeUnused call:[setFlag] noreturn:[setFlag]
setCppcheckAttribute call:[setCppcheckAttribute] noreturn:[setCppcheckAttribute]
getCppcheckAttribute call:[getCppcheckAttribute] noreturn:[getCppcheckAttribute]
hasCppcheckAttributes
isControlFlowKeyword call:[getFlag] noreturn:[getFlag]
isOperatorKeyword call:[getFlag] noreturn:[getFlag]
isOperatorKeyword call:[setFlag] noreturn:[setFlag]
isComplex call:[getFlag] noreturn:[getFlag]
isComplex call:[setFlag] noreturn:[setFlag]
isEnumType call:[getFlag] noreturn:[getFlag]
isEnumType call:[setFlag] noreturn:[setFlag]
isAtAddress call:[getFlag] noreturn:[getFlag]
isAtAddress call:[setFlag] noreturn:[setFlag]
isIncompleteVar call:[getFlag] noreturn:[getFlag]
isIncompleteVar call:[setFlag] noreturn:[setFlag]
isConstexpr call:[getFlag] noreturn:[getFlag]
isConstexpr call:[setFlag] noreturn:[setFlag]
isExternC call:[getFlag] noreturn:[getFlag]
isExternC call:[setFlag] noreturn:[setFlag]
isSplittedVarDeclComma call:[getFlag] noreturn:[getFlag]
isSplittedVarDeclComma call:[setFlag] noreturn:[setFlag]
isSplittedVarDeclEq call:[getFlag] noreturn:[getFlag]
isSplittedVarDeclEq call:[setFlag] noreturn:[setFlag]
isImplicitInt call:[getFlag] noreturn:[getFlag]
isImplicitInt call:[setFlag] noreturn:[setFlag]
isInline call:[getFlag] noreturn:[getFlag]
isInline call:[setFlag] noreturn:[setFlag]
isTemplate call:[getFlag] noreturn:[getFlag]
isTemplate call:[setFlag] noreturn:[setFlag]
isBitfield
bits
templateSimplifierPointers
templateSimplifierPointer call:[insert] noreturn:[insert]
setBits
isUtf8 call:[isPrefixStringCharLiteral,return] noreturn:[return]
isUtf16 call:[isPrefixStringCharLiteral,return] noreturn:[return]
isUtf32 call:[isPrefixStringCharLiteral,return] noreturn:[return]
isCChar call:[isPrefixStringCharLiteral,length,return] noreturn:[return]
isCMultiChar call:[isPrefixStringCharLiteral,length,return] noreturn:[return]
isTemplateArg call:[getFlag] noreturn:[getFlag]
isTemplateArg call:[setFlag] noreturn:[setFlag]
findsimplematch call:[findsimplematch] noreturn:[findsimplematch]
findsimplematch call:[findsimplematch] noreturn:[findsimplematch]
findsimplematch call:[findsimplematch] noreturn:[findsimplematch]
findsimplematch call:[findsimplematch]
findsimplematch call:[findsimplematch] noreturn:[findsimplematch]
findsimplematch call:[findsimplematch]
findmatch call:[findmatch]
findmatch call:[findmatch]
fileIndex
fileIndex
linenr
linenr
column
column
next
previous
varId
varId call:[isStandardType,tokType,update_property_info] noreturn:[isStandardType,update_property_info]
exprId
exprId
forDebug
forDebugVarId call:[forDebug]
forDebugExprId call:[forDebug]
forPrintOut call:[forDebug]
link call:[update_property_info] noreturn:[update_property_info]
link
scope
scope
function
variable call:[tokType] noreturn:[tokType]
variable
type
enumerator
enumerator call:[tokType] noreturn:[tokType]
progressValue
originalName global:[emptyString]
values
originalName call:[string] noreturn:[string]
getKnownIntValue call:[front]
removeValues call:[remove_if] noreturn:[remove_if]
index
next
previous
getFlag call:[return] noreturn:[return]
setFlag
astOperand1
astOperand1
astOperand2
astOperand2
astParent
astParent
astSibling call:[astOperand1,astOperand2,astParent] noreturn:[astOperand1,astOperand2]
astSibling call:[astOperand1,astOperand2,astParent] noreturn:[astOperand1,astOperand2]
astTop
astTop
clearAst
clearValueFlow
astString call:[astString] noreturn:[astString]
setCpp11init
isCpp11init
setSettings
getSettings
isC
isCPP
front
front
back
back
getFiles
find call:[find] noreturn:[find]
end call:[end] noreturn:[end]
map
getVarId
setTimerResults
isC call:[isC] noreturn:[isC]
isCPP call:[isCPP] noreturn:[isCPP]
setPreprocessor
getPreprocessor
codeWithTemplates
setSettings call:[setSettings] noreturn:[setSettings]
getSymbolDatabase
varIdCount
tokens call:[front] noreturn:[front]
isMaxTime
getSettings
newVarId
CheckStl
CheckStl
runChecks call:[checkDereferenceInvalidIterator,checkDereferenceInvalidIterator2,checkFindInsert,checkMutexes,checkStl,erase,if_find,invalidContainer,isCPP,iterators,knownEmptyContainer,mismatchingContainerIterator,mismatchingContainers,missingComparison,negativeIndex,outOfBounds,outOfBoundsIndexExpression,redundantCondition,size,stlBoundaries,stlOutOfBounds,string_c_str,useStlAlgorithm,uselessCalls] noreturn:[size]
getErrorMessages call:[Value,c,checkFindInsertError,dereferenceErasedError,dereferenceInvalidIteratorError,globalLockGuardError,if_findError,invalidContainerError,invalidContainerLoopError,invalidIteratorError,iteratorsError,knownEmptyContainerError,localMutexError,mismatchingContainerExpressionError,mismatchingContainerIteratorError,mismatchingContainersError,missingComparisonError,negativeIndexError,outOfBoundsError,readingEmptyStlContainerError,redundantIfRemoveError,sameIteratorExpressionError,sizeError,stlBoundariesError,stlOutOfBoundsError,string_c_strError,string_c_strParam,string_c_strReturn,string_c_strThrowError,useStlAlgorithmError,uselessCallsEmptyError,uselessCallsRemoveError,uselessCallsReturnValueError,uselessCallsSubstrError,uselessCallsSwapError] noreturn:[localMutexError]
myName
classInfo
min_value
max_value call:[return]
Platform
isIntValue call:[max_value,min_value] noreturn:[max_value]
isIntValue call:[max_value]
isLongValue call:[max_value,min_value] noreturn:[max_value]
isLongValue call:[max_value]
isLongLongValue call:[max_value]
isWindowsPlatform
platformString call:[platformString] noreturn:[platformString]
platformString
unsignedCharMax call:[max_value] noreturn:[max_value]
signedCharMax call:[max_value] noreturn:[max_value]
signedCharMin call:[min_value] noreturn:[min_value]
operator() call:[caseInsensitiveStringCompare]
FileSettings
cppcheckDefines
Standards
setC
getC
setCPP
getCPP
Error
Error
Error
getAllocFuncInfo call:[getAllocDealloc] noreturn:[getAllocDealloc]
getDeallocFuncInfo call:[getAllocDealloc] noreturn:[getAllocDealloc]
allocId call:[getAllocDealloc]
deallocId call:[getAllocDealloc]
setalloc
setdealloc
setrealloc
setnoreturn
ismemory call:[return] noreturn:[return]
ismemory call:[return] noreturn:[return]
isresource call:[return] noreturn:[return]
isresource call:[return] noreturn:[return]
Container
getAction call:[end,find]
getYield call:[end,find]
ArgumentChecks
IteratorInfo
MinSize
Function
isboolargbad call:[getarg]
isargformatstr call:[getarg]
isargstrz call:[getarg]
validarg global:[emptyString] call:[getarg]
isInt call:[isInt] noreturn:[isInt]
getArgIteratorInfo call:[getarg]
argminsizes call:[getarg]
markupExtensions
isexporter call:[end,find] noreturn:[end]
isexportedprefix call:[end,find,isPrefix,return] noreturn:[return]
isexportedsuffix call:[end,find,isSuffix,return] noreturn:[return]
isreflection call:[end,find] noreturn:[end]
reflectionArgument call:[end,find]
podtype call:[end,find,return]
PlatformType
operator== call:[return] noreturn:[return]
operator!=
platform_type call:[end,find,return]
platform_type call:[end,find,platform_type,return]
addPrefix call:[insert] noreturn:[insert]
addSuffix call:[insert] noreturn:[insert]
isPrefix call:[end,find,return] noreturn:[return]
isSuffix call:[end,find,return] noreturn:[return]
CodeBlock
setStart
setEnd
setOffset
addBlock call:[insert] noreturn:[insert]
start
end
offset
isBlock call:[end,find] noreturn:[end]
getAllocDealloc call:[end,find,return]
getFileName
Suppression
Suppression
Suppression
operator=
operator<
isLocal call:[empty,find_first_of]
isSameParameters
TimerResultsIntf
TimerResultsData
seconds
TimerResults
Rule
SafeChecks
clear
configurationExcluded call:[compare,length]
posix call:[begin,end,find] noreturn:[end]
terminate
terminated
FileLocation
FileLocation
FileLocation
getinfo
setinfo
shortMessage
verboseMessage
symbolNames
ErrorLogger
ErrorLogger call:[close,is_open,plistFooter] noreturn:[close]
reportProgress
reportInfo call:[reportErr] noreturn:[reportErr]
plistFooter
assertEquals call:[assertEqualsFailed,str] noreturn:[assertEqualsFailed]
setVerbose
setMultiline
bughuntingReport
TestFixture
TestStl
run call:[STLSize,STLSizeNoErr,c_str,checkKnownEmptyContainer,checkMutexes,complainMissingLib,cstr,dereference,dereferenceInvalidIterator,dereferenceInvalidIterator2,dereference_auto,dereference_break,dereference_member,enable,erase1,erase2,erase3,erase4,erase5,erase6,eraseAssign1,eraseAssign2,eraseAssign3,eraseAssign4,eraseAssignByFunctionCall,eraseBreak,eraseByValue,eraseContinue,eraseErase,eraseGoto,eraseIf,eraseOnVector,eraseReturn1,eraseReturn2,eraseReturn3,findInsert,if_find,if_str_find,insert1,insert2,invalidContainer,invalidContainerLoop,iterator1,iterator10,iterator11,iterator12,iterator13,iterator14,iterator15,iterator16,iterator17,iterator18,iterator19,iterator2,iterator20,iterator21,iterator22,iterator23,iterator24,iterator25,iterator26,iterator27,iterator28,iterator3,iterator4,iterator5,iterator6,iterator7,iterator8,iterator9,iteratorExpression,iteratorSameExpression,load,loopAlgoAccumulateAssign,loopAlgoConditional,loopAlgoContainerInsert,loopAlgoElementAssign,loopAlgoIncrement,loopAlgoMinMax,mismatchingContainerIterator,missingInnerComparison1,missingInnerComparison2,missingInnerComparison3,missingInnerComparison4,missingInnerComparison5,missingInnerComparison6,negativeIndex,outOfBounds,outOfBoundsIndexExpression,outOfBoundsIterator,outOfBoundsSymbolic,prepareTest,pushback1,pushback10,pushback11,pushback12,pushback13,pushback2,pushback3,pushback4,pushback5,pushback6,pushback7,pushback8,pushback9,redundantCondition1,setVerbose,size1,size2,size3,size4,stabilityOfChecks,stlBoundaries1,stlBoundaries2,stlBoundaries3,stlBoundaries4,stlBoundaries5,stlBoundaries6,uselessCalls,while] noreturn:[STLSize,STLSizeNoErr,checkKnownEmptyContainer,checkMutexes,cstr,dereference,dereferenceInvalidIterator,dereferenceInvalidIterator2,dereference_auto,dereference_break,dereference_member,erase1,erase2,erase3,erase4,erase5,erase6,eraseAssign1,eraseAssign2,eraseAssign3,eraseAssign4,eraseAssignByFunctionCall,eraseBreak,eraseByValue,eraseContinue,eraseErase,eraseGoto,eraseIf,eraseOnVector,eraseReturn1,eraseReturn2,eraseReturn3,findInsert,if_find,if_str_find,insert1,insert2,invalidContainer,invalidContainerLoop,iterator1,iterator10,iterator11,iterator12,iterator13,iterator14,iterator15,iterator16,iterator17,iterator18,iterator19,iterator2,iterator20,iterator21,iterator22,iterator23,iterator24,iterator25,iterator26,iterator27,iterator28,iterator3,iterator4,iterator5,iterator6,iterator7,iterator8,iterator9,iteratorExpression,iteratorSameExpression,loopAlgoAccumulateAssign,loopAlgoConditional,loopAlgoContainerInsert,loopAlgoElementAssign,loopAlgoIncrement,loopAlgoMinMax,mismatchingContainerIterator,missingInnerComparison1,missingInnerComparison2,missingInnerComparison3,missingInnerComparison4,missingInnerComparison5,missingInnerComparison6,negativeIndex,outOfBounds,outOfBoundsIndexExpression,outOfBoundsIterator,outOfBoundsSymbolic,pushback1,pushback10,pushback11,pushback12,pushback13,pushback2,pushback3,pushback4,pushback5,pushback6,pushback7,pushback8,pushback9,redundantCondition1,size1,size2,size3,size4,stabilityOfChecks,stlBoundaries1,stlBoundaries2,stlBoundaries3,stlBoundaries4,stlBoundaries5,stlBoundaries6,uselessCalls,while]
check_ global:[errout] call:[assert_,checkStl,istr,runChecks,setEnabled,str,tokenize,tokenizer] noreturn:[runChecks]
check_ call:[c_str,check_] noreturn:[check_]
checkNormal_ global:[errout] call:[assert_,checkStl,istr,runChecks,str,tokenize,tokenizer] noreturn:[runChecks]
outOfBounds global:[errout] call:[assertEquals,checkNormal_,check_,setMultiline,str]
outOfBoundsSymbolic global:[errout] call:[assertEquals,check_,str]
outOfBoundsIndexExpression global:[errout] call:[assertEquals,checkNormal_,setMultiline,str]
outOfBoundsIterator global:[errout] call:[assertEquals,check_,str]
iterator1 global:[errout] call:[assertEquals,check_,str]
iterator2 global:[errout] call:[assertEquals,check_,str]
iterator3 global:[errout] call:[assertEquals,check_,str]
iterator4 global:[errout] call:[assertEquals,check_,str]
iterator5 global:[errout] call:[assertEquals,check_,str]
iterator6 global:[errout] call:[assertEquals,check_,str,todoAssertEquals] noreturn:[todoAssertEquals]
iterator7 global:[errout] call:[assertEquals,check_,str]
iterator8 global:[errout] call:[assertEquals,check_,str]
iterator9 global:[errout] call:[assertEquals,check_,str,todoAssertEquals] noreturn:[todoAssertEquals]
iterator10 global:[errout] call:[assertEquals,check_,str]
iterator11 global:[errout] call:[assertEquals,check_,str]
iterator12 global:[errout] call:[assertEquals,check_,str]
iterator13 global:[errout] call:[assertEquals,check_,str]
iterator14 global:[errout] call:[assertEquals,check_,str]
iterator15 global:[errout] call:[assertEquals,check_,str]
iterator16 global:[errout] call:[assertEquals,check_,str]
iterator17 global:[errout] call:[assertEquals,check_,str]
iterator18 global:[errout] call:[assertEquals,check_,str,todoAssertEquals] noreturn:[todoAssertEquals]
iterator19 global:[errout] call:[assertEquals,check_,str,todoAssertEquals]
iterator20 global:[errout] call:[assertEquals,check_,str,todoAssertEquals] noreturn:[todoAssertEquals]
iterator21 global:[errout] call:[assertEquals,check_,str]
iterator22 global:[errout] call:[assertEquals,check_,str]
iterator23 global:[errout] call:[assertEquals,check_,str]
iterator24 global:[errout] call:[assertEquals,check_,str]
iterator25 global:[errout] call:[assertEquals,check_,str]
iterator26 global:[errout] call:[assertEquals,check_,str]
iterator27 global:[errout] call:[assertEquals,check_,str]
iterator28 global:[errout] call:[assertEquals,check_,str]
iteratorExpression global:[errout] call:[assertEquals,check_,str]
iteratorSameExpression global:[errout] call:[assertEquals,check_,str]
mismatchingContainerIterator global:[errout] call:[assertEquals,check_,str]
dereference global:[errout] call:[assertEquals,check_,str,todoAssertEquals]
dereference_break global:[errout] call:[assertEquals,check_,str]
dereference_member global:[errout] call:[assertEquals,check_,str]
dereference_auto global:[errout] call:[assertEquals,check_,str,todoAssertEquals]
STLSize global:[errout] call:[assertEquals,check_,str,todoAssertEquals] noreturn:[todoAssertEquals]
STLSizeNoErr global:[errout] call:[assertEquals,check_,str]
negativeIndex global:[errout] call:[assertEquals,check_,str]
erase1 global:[errout] call:[assertEquals,check_,str]
erase2 global:[errout] call:[assertEquals,check_,str]
erase3 global:[errout] call:[assertEquals,check_,str]
erase4 global:[errout] call:[assertEquals,check_,str]
erase5 global:[errout] call:[assertEquals,check_,str]
erase6 global:[errout] call:[assertEquals,check_,str]
eraseBreak global:[errout] call:[assertEquals,check_,str]
eraseContinue global:[errout] call:[assertEquals,check_,str]
eraseReturn1 global:[errout] call:[assertEquals,check_,str]
eraseReturn2 global:[errout] call:[assertEquals,check_,str]
eraseReturn3 global:[errout] call:[assertEquals,check_,str]
eraseGoto global:[errout] call:[assertEquals,check_,str]
eraseAssign1 global:[errout] call:[assertEquals,check_,str]
eraseAssign2 global:[errout] call:[assertEquals,check_,str]
eraseAssign3 global:[errout] call:[assertEquals,check_,str]
eraseAssign4 global:[errout] call:[assertEquals,check_,str]
eraseAssignByFunctionCall global:[errout] call:[assertEquals,check_,str]
eraseErase global:[errout] call:[check_,str,todoAssertEquals] noreturn:[todoAssertEquals]
eraseByValue global:[errout] call:[assertEquals,check_,str,todoAssertEquals]
eraseIf global:[errout] call:[assertEquals,check_,str]
eraseOnVector global:[errout] call:[assertEquals,check_,str]
pushback1 global:[errout] call:[assertEquals,check_,str]
pushback2 global:[errout] call:[assertEquals,check_,str]
pushback3 global:[errout] call:[assertEquals,check_,str]
pushback4 global:[errout] call:[assertEquals,check_,str]
pushback5 global:[errout] call:[assertEquals,check_,str]
pushback6 global:[errout] call:[assertEquals,check_,str]
pushback7 global:[errout] call:[assertEquals,check_,str]
pushback8 global:[errout] call:[assertEquals,check_,str]
pushback9 global:[errout] call:[assertEquals,check_,str]
pushback10 global:[errout] call:[assertEquals,check_,str]
pushback11 global:[errout] call:[assertEquals,check_,str]
pushback12 global:[errout] call:[assertEquals,check_,str]
pushback13 global:[errout] call:[assertEquals,check_,str]
insert1 global:[errout] call:[assertEquals,check_,str,todoAssertEquals]
insert2 global:[errout] call:[assertEquals,check_,str]
getArraylength
stlBoundaries1 global:[errout] call:[assertEquals,check_,getArraylength,str] noreturn:[assertEquals]
stlBoundaries2 global:[errout] call:[assertEquals,check_,str]
stlBoundaries3 global:[errout] call:[assertEquals,check_,str]
stlBoundaries4 global:[errout] call:[assertEquals,check_,str]
stlBoundaries5 global:[errout] call:[assertEquals,check_,str]
stlBoundaries6 global:[errout] call:[assertEquals,check_,str]
if_find global:[errout] call:[assertEquals,assertThrowFail,check_,str,while] noreturn:[assertThrowFail]
if_str_find global:[errout] call:[assertEquals,check_,str]
size1 global:[errout] call:[assertEquals,check_,str]
size2 global:[errout] call:[assertEquals,check_,str]
size3 global:[errout] call:[assertEquals,check_,str]
size4 global:[errout] call:[assertEquals,check_,str]
redundantCondition1 global:[errout] call:[assertEquals,check_,str]
missingInnerComparison1 global:[errout] call:[assertEquals,check_,str]
missingInnerComparison2 global:[errout] call:[assertEquals,check_,str]
missingInnerComparison3 global:[errout] call:[assertEquals,check_,str]
missingInnerComparison4 global:[errout] call:[assertEquals,check_,str]
missingInnerComparison5 global:[errout] call:[assertEquals,check_,str]
missingInnerComparison6 global:[errout] call:[assertEquals,check_,str]
cstr global:[errout] call:[assertEquals,check_,str]
uselessCalls global:[errout] call:[assertEquals,check_,str]
stabilityOfChecks global:[errout] call:[assertEquals,check_,str]
dereferenceInvalidIterator global:[errout] call:[assertEquals,check_,str]
dereferenceInvalidIterator2 global:[errout] call:[assertEquals,check_,str]
loopAlgoElementAssign global:[errout] call:[assertEquals,check_,str]
loopAlgoAccumulateAssign global:[errout] call:[assertEquals,check_,str]
loopAlgoContainerInsert global:[errout] call:[assertEquals,check_,str]
loopAlgoIncrement global:[errout] call:[assertEquals,check_,str]
loopAlgoConditional global:[errout] call:[assertEquals,check_,str]
loopAlgoMinMax global:[errout] call:[assertEquals,check_,str]
invalidContainer global:[errout] call:[assertEquals,check_,str]
invalidContainerLoop global:[errout] call:[assertEquals,check_,str]
findInsert global:[errout] call:[assertEquals,check_,str]
checkKnownEmptyContainer global:[errout] call:[assertEquals,check_,str]
checkMutexes global:[errout] call:[assertEquals,check_,str]
intValue
clear
fill
setEnabledAll call:[clear,fill] noreturn:[clear,fill]
isEnabled call:[return]
enable
disable
setEnabled call:[disable,enable] noreturn:[disable,enable]
intValue
clear
fill
setEnabledAll call:[clear,fill] noreturn:[clear,fill]
isEnabled call:[return]
enable
disable
setEnabled call:[disable,enable] noreturn:[disable,enable]
intValue
clear
fill
setEnabledAll call:[clear,fill] noreturn:[clear,fill]
isEnabled call:[return]
enable
disable
setEnabled call:[disable,enable] noreturn:[disable,enable]
