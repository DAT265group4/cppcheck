isClass call:[setFlag] noreturn:[setFlag]
isFunction call:[setFlag] noreturn:[setFlag]
isVariable call:[setFlag] noreturn:[setFlag]
isAlias call:[setFlag] noreturn:[setFlag]
isSpecialization call:[setFlag] noreturn:[setFlag]
isPartialSpecialization call:[setFlag] noreturn:[setFlag]
isForwardDeclaration call:[setFlag] noreturn:[setFlag]
isVariadic call:[setFlag] noreturn:[setFlag]
isFriend call:[setFlag] noreturn:[setFlag]
getFlag call:[return] noreturn:[return]
setFlag
operator==
token
token
scope
name
fullName
nameToken
paramEnd
paramEnd
isClass call:[getFlag] noreturn:[getFlag]
isFunction call:[getFlag] noreturn:[getFlag]
isVariable call:[getFlag] noreturn:[getFlag]
isAlias call:[getFlag] noreturn:[getFlag]
isSpecialization call:[getFlag] noreturn:[getFlag]
isPartialSpecialization call:[getFlag] noreturn:[getFlag]
isForwardDeclaration call:[getFlag] noreturn:[getFlag]
isVariadic call:[getFlag] noreturn:[getFlag]
isFriend call:[getFlag] noreturn:[getFlag]
isSameFamily call:[return]
CWE
getFileName
Suppression
Suppression
Suppression
operator=
operator<
isLocal call:[empty,find_first_of]
isSameParameters
FileLocation
FileLocation
FileLocation
getinfo
setinfo
shortMessage
verboseMessage
symbolNames
ErrorLogger
ErrorLogger call:[close,is_open,plistFooter] noreturn:[close]
reportProgress
reportInfo call:[reportErr] noreturn:[reportErr]
plistFooter
isInt
isFloat
getDoubleValue call:[isFloat]
toString call:[str] noreturn:[str]
operator()
operator()
contains call:[begin,end,find] noreturn:[end]
contains call:[begin,end,find] noreturn:[end]
contains call:[begin,end,find] noreturn:[end]
operator()
endsWith call:[back,empty]
endsWith call:[compare,return,size]
endsWith call:[endsWith] noreturn:[endsWith]
isPrefixStringCharLiteral call:[compare,endsWith,length,size]
isStringCharLiteral call:[isPrefixStringCharLiteral]
isStringLiteral call:[isStringCharLiteral] noreturn:[isStringCharLiteral]
isCharLiteral call:[isStringCharLiteral] noreturn:[isStringCharLiteral]
getStringCharLiteral call:[find,size,substr] noreturn:[substr]
getStringLiteral call:[getStringCharLiteral,isStringLiteral] noreturn:[getStringCharLiteral]
getCharLiteral call:[getStringCharLiteral,isCharLiteral] noreturn:[getStringCharLiteral]
getOrdinalText
min_value
max_value call:[return]
Platform
isIntValue call:[max_value,min_value] noreturn:[max_value]
isIntValue call:[max_value]
isLongValue call:[max_value,min_value] noreturn:[max_value]
isLongValue call:[max_value]
isLongLongValue call:[max_value]
isWindowsPlatform
platformString call:[platformString] noreturn:[platformString]
platformString
unsignedCharMax call:[max_value] noreturn:[max_value]
signedCharMax call:[max_value] noreturn:[max_value]
signedCharMin call:[min_value] noreturn:[min_value]
operator() call:[caseInsensitiveStringCompare]
FileSettings
cppcheckDefines
Standards
setC
getC
setCPP
getCPP
Error
Error
Error
getAllocFuncInfo call:[getAllocDealloc] noreturn:[getAllocDealloc]
getDeallocFuncInfo call:[getAllocDealloc] noreturn:[getAllocDealloc]
allocId call:[getAllocDealloc]
deallocId call:[getAllocDealloc]
setalloc
setdealloc
setrealloc
setnoreturn
ismemory call:[return] noreturn:[return]
ismemory call:[return] noreturn:[return]
isresource call:[return] noreturn:[return]
isresource call:[return] noreturn:[return]
Container
getAction call:[end,find]
getYield call:[end,find]
ArgumentChecks
IteratorInfo
MinSize
Function
isboolargbad call:[getarg]
isargformatstr call:[getarg]
isargstrz call:[getarg]
validarg global:[emptyString] call:[getarg]
isInt call:[isInt] noreturn:[isInt]
getArgIteratorInfo call:[getarg]
argminsizes call:[getarg]
markupExtensions
isexporter call:[end,find] noreturn:[end]
isexportedprefix call:[end,find,isPrefix,return] noreturn:[return]
isexportedsuffix call:[end,find,isSuffix,return] noreturn:[return]
isreflection call:[end,find] noreturn:[end]
reflectionArgument call:[end,find]
podtype call:[end,find,return]
PlatformType
operator== call:[return] noreturn:[return]
operator!=
platform_type call:[end,find,return]
platform_type call:[end,find,platform_type,return]
addPrefix call:[insert] noreturn:[insert]
addSuffix call:[insert] noreturn:[insert]
isPrefix call:[end,find,return] noreturn:[return]
isSuffix call:[end,find,return] noreturn:[return]
CodeBlock
setStart
setEnd
setOffset
addBlock call:[insert] noreturn:[insert]
start
end
offset
isBlock call:[end,find] noreturn:[end]
getAllocDealloc call:[end,find,return]
TimerResultsIntf
TimerResultsData
seconds
TimerResults
Rule
SafeChecks
clear
configurationExcluded call:[compare,length]
posix call:[begin,end,find] noreturn:[end]
terminate
terminated
FwdAnalysis
Result
Result
operator()
operator()
operator()
operator() call:[abs]
operator()
Value
equalValue call:[sameToken]
visitValue call:[f]
operator() call:[compare] noreturn:[compare]
operator() call:[bind,move,ref,visitValue] noreturn:[visitValue]
compareValue call:[assert,bind,isSymbolicValue,move,ref,sameToken,visitValue]
operator== call:[equalValue]
operator!=
equalTo call:[bind,ref,visitValue]
decreaseRange call:[visitValue] noreturn:[visitValue]
invertBound
invertRange call:[decreaseRange,invertBound] noreturn:[decreaseRange]
isIntValue
isTokValue
isFloatValue
isMovedValue
isUninitValue
isContainerSizeValue
isLifetimeValue
isBufferSizeValue
isIteratorValue
isIteratorStartValue
isIteratorEndValue
isSymbolicValue
isLocalLifetimeValue
isArgumentLifetimeValue
isSubFunctionLifetimeValue
isNonValue call:[isLifetimeValue,isMovedValue,isUninitValue] noreturn:[isLifetimeValue]
setKnown
isKnown
setPossible
isPossible
isImpossible
setImpossible
setInconclusive
isInconclusive
changeKnownToPossible call:[isKnown]
errorSeverity
LifetimeToken
LifetimeToken
LifetimeToken
setAddressOf
setInconclusive
ScopeInfo2
TokenImpl
str call:[update_property_info] noreturn:[update_property_info]
str
tokAt call:[tokAt]
linkAt call:[linkAt]
simpleMatch call:[simpleMatch] noreturn:[simpleMatch]
valueType
argumentType call:[Match,astParent] noreturn:[astParent]
tokType
tokType call:[setFlag] noreturn:[setFlag]
isKeyword
isName call:[getFlag] noreturn:[getFlag]
isNameOnly
isLiteral call:[getFlag] noreturn:[getFlag]
isNumber
isEnumerator
isOp call:[isAssignmentOp,isConstOp,return] noreturn:[return]
isConstOp call:[isArithmeticalOp,return] noreturn:[return]
isExtendedOp call:[isConstOp]
isArithmeticalOp
isComparisonOp
isAssignmentOp
isBoolean
isIncDecOp
isBinaryOp call:[astOperand1,astOperand2]
isUnaryOp call:[astOperand1,astOperand2]
flags
flags
isUnsigned call:[getFlag] noreturn:[getFlag]
isUnsigned call:[setFlag] noreturn:[setFlag]
isSigned call:[getFlag] noreturn:[getFlag]
isSigned call:[setFlag] noreturn:[setFlag]
isPointerCompare call:[getFlag] noreturn:[getFlag]
isPointerCompare call:[setFlag] noreturn:[setFlag]
isLong call:[getFlag] noreturn:[getFlag]
isLong call:[setFlag] noreturn:[setFlag]
isStandardType call:[getFlag] noreturn:[getFlag]
isStandardType call:[setFlag] noreturn:[setFlag]
isExpandedMacro call:[getFlag] noreturn:[getFlag]
isExpandedMacro call:[setFlag] noreturn:[setFlag]
isCast call:[getFlag] noreturn:[getFlag]
isCast call:[setFlag] noreturn:[setFlag]
isAttributeConstructor call:[getFlag] noreturn:[getFlag]
isAttributeConstructor call:[setFlag] noreturn:[setFlag]
isAttributeDestructor call:[getFlag] noreturn:[getFlag]
isAttributeDestructor call:[setFlag] noreturn:[setFlag]
isAttributeUnused call:[getFlag] noreturn:[getFlag]
isAttributeUnused call:[setFlag] noreturn:[setFlag]
isAttributeUsed call:[getFlag] noreturn:[getFlag]
isAttributeUsed call:[setFlag] noreturn:[setFlag]
isAttributePure call:[getFlag] noreturn:[getFlag]
isAttributePure call:[setFlag] noreturn:[setFlag]
isAttributeConst call:[getFlag] noreturn:[getFlag]
isAttributeConst call:[setFlag] noreturn:[setFlag]
isAttributeNoreturn call:[getFlag] noreturn:[getFlag]
isAttributeNoreturn call:[setFlag] noreturn:[setFlag]
isAttributeNothrow call:[getFlag] noreturn:[getFlag]
isAttributeNothrow call:[setFlag] noreturn:[setFlag]
isAttributePacked call:[getFlag] noreturn:[getFlag]
isAttributePacked call:[setFlag] noreturn:[setFlag]
isAttributeNodiscard call:[getFlag] noreturn:[getFlag]
isAttributeNodiscard call:[setFlag] noreturn:[setFlag]
isAttributeMaybeUnused call:[getFlag] noreturn:[getFlag]
isAttributeMaybeUnused call:[setFlag] noreturn:[setFlag]
setCppcheckAttribute call:[setCppcheckAttribute] noreturn:[setCppcheckAttribute]
getCppcheckAttribute call:[getCppcheckAttribute] noreturn:[getCppcheckAttribute]
hasCppcheckAttributes
isControlFlowKeyword call:[getFlag] noreturn:[getFlag]
isOperatorKeyword call:[getFlag] noreturn:[getFlag]
isOperatorKeyword call:[setFlag] noreturn:[setFlag]
isComplex call:[getFlag] noreturn:[getFlag]
isComplex call:[setFlag] noreturn:[setFlag]
isEnumType call:[getFlag] noreturn:[getFlag]
isEnumType call:[setFlag] noreturn:[setFlag]
isAtAddress call:[getFlag] noreturn:[getFlag]
isAtAddress call:[setFlag] noreturn:[setFlag]
isIncompleteVar call:[getFlag] noreturn:[getFlag]
isIncompleteVar call:[setFlag] noreturn:[setFlag]
isConstexpr call:[getFlag] noreturn:[getFlag]
isConstexpr call:[setFlag] noreturn:[setFlag]
isExternC call:[getFlag] noreturn:[getFlag]
isExternC call:[setFlag] noreturn:[setFlag]
isSplittedVarDeclComma call:[getFlag] noreturn:[getFlag]
isSplittedVarDeclComma call:[setFlag] noreturn:[setFlag]
isSplittedVarDeclEq call:[getFlag] noreturn:[getFlag]
isSplittedVarDeclEq call:[setFlag] noreturn:[setFlag]
isImplicitInt call:[getFlag] noreturn:[getFlag]
isImplicitInt call:[setFlag] noreturn:[setFlag]
isInline call:[getFlag] noreturn:[getFlag]
isInline call:[setFlag] noreturn:[setFlag]
isTemplate call:[getFlag] noreturn:[getFlag]
isTemplate call:[setFlag] noreturn:[setFlag]
isBitfield
bits
templateSimplifierPointers
templateSimplifierPointer call:[insert] noreturn:[insert]
setBits
isUtf8 call:[isPrefixStringCharLiteral,return] noreturn:[return]
isUtf16 call:[isPrefixStringCharLiteral,return] noreturn:[return]
isUtf32 call:[isPrefixStringCharLiteral,return] noreturn:[return]
isCChar call:[isPrefixStringCharLiteral,length,return] noreturn:[return]
isCMultiChar call:[isPrefixStringCharLiteral,length,return] noreturn:[return]
isTemplateArg call:[getFlag] noreturn:[getFlag]
isTemplateArg call:[setFlag] noreturn:[setFlag]
findsimplematch call:[findsimplematch] noreturn:[findsimplematch]
findsimplematch call:[findsimplematch] noreturn:[findsimplematch]
findsimplematch call:[findsimplematch] noreturn:[findsimplematch]
findsimplematch call:[findsimplematch]
findsimplematch call:[findsimplematch] noreturn:[findsimplematch]
findsimplematch call:[findsimplematch]
findmatch call:[findmatch]
findmatch call:[findmatch]
fileIndex
fileIndex
linenr
linenr
column
column
next
previous
varId
varId call:[isStandardType,tokType,update_property_info] noreturn:[isStandardType,update_property_info]
exprId
exprId
forDebug
forDebugVarId call:[forDebug]
forDebugExprId call:[forDebug]
forPrintOut call:[forDebug]
link call:[update_property_info] noreturn:[update_property_info]
link
scope
scope
function
variable call:[tokType] noreturn:[tokType]
variable
type
enumerator
enumerator call:[tokType] noreturn:[tokType]
progressValue
originalName global:[emptyString]
values
originalName call:[string] noreturn:[string]
getKnownIntValue call:[front]
removeValues call:[remove_if] noreturn:[remove_if]
index
next
previous
getFlag call:[return] noreturn:[return]
setFlag
astOperand1
astOperand1
astOperand2
astOperand2
astParent
astParent
astSibling call:[astOperand1,astOperand2,astParent] noreturn:[astOperand1,astOperand2]
astSibling call:[astOperand1,astOperand2,astParent] noreturn:[astOperand1,astOperand2]
astTop
astTop
clearAst
clearValueFlow
astString call:[astString] noreturn:[astString]
setCpp11init
isCpp11init
setSettings
getSettings
isC
isCPP
front
front
back
back
getFiles
find call:[find] noreturn:[find]
end call:[end] noreturn:[end]
map
getVarId
setTimerResults
isC call:[isC] noreturn:[isC]
isCPP call:[isCPP] noreturn:[isCPP]
setPreprocessor
getPreprocessor
codeWithTemplates
setSettings call:[setSettings] noreturn:[setSettings]
getSymbolDatabase
varIdCount
tokens call:[front] noreturn:[front]
isMaxTime
getSettings
newVarId
skipRequires call:[Match,findClosingBracket,link,linkAt,next,simpleMatch,str,tokAt] noreturn:[tokAt]
FindToken
operator() call:[token]
FindName
operator() call:[name]
FindFullName
operator() call:[fullName]
TokenAndName call:[findClosingBracket,isFunction,next,strAt,templateSimplifierPointer] noreturn:[isFunction,templateSimplifierPointer]
TokenAndName call:[InternalError,Match,assert,empty,findClosingBracket,findOpeningBracket,findmatch,isAlias,isClass,isForwardDeclaration,isFriend,isFunction,isPartialSpecialization,isSpecialization,isVariable,isVariadic,link,next,previous,simpleMatch,str,strAt,templateSimplifierPointer,tokAt] noreturn:[InternalError,findClosingBracket,isForwardDeclaration,isPartialSpecialization,isVariadic,link,next,previous,str,templateSimplifierPointer,tokAt]
TokenAndName call:[templateSimplifierPointer] noreturn:[templateSimplifierPointer]
TokenAndName call:[erase,templateSimplifierPointers] noreturn:[erase]
aliasStartToken call:[tokAt] noreturn:[tokAt]
aliasEndToken call:[aliasStartToken,findsimplematch] noreturn:[findsimplematch]
isAliasToken call:[aliasEndToken,aliasStartToken,next]
TemplateSimplifier
TemplateSimplifier
checkComplicatedSyntaxErrorsInTemplates call:[Match,end,find,front,insert,isStandardType,link,linkAt,next,previous,simpleMatch,startOfExecutableScope,str,strAt,syntaxError,tokAt] noreturn:[insert,link,next,syntaxError,tokAt]
templateParameters call:[Match,findClosingBracket,isName,isNumber,isOp,link,next,previous,simpleMatch,str,strAt,syntaxError,tokAt,tokType] noreturn:[next,syntaxError]
findTemplateDeclarationEnd call:[findTemplateDeclarationEnd]
findTemplateDeclarationEnd call:[Match,findClosingBracket,link,linkAt,next,simpleMatch,str,strAt] noreturn:[findClosingBracket,link,next]
eraseTokens call:[deleteNext,next] noreturn:[deleteNext]
deleteToken call:[deletePrevious,deleteThis,next] noreturn:[deletePrevious,deleteThis]
removeTemplate call:[deleteToken,eraseTokens,findTemplateDeclarationEnd,next,simpleMatch]
getTemplateDeclarations call:[Match,decl,emplace_back,findClosingBracket,findTemplateDeclarationEnd,front,getTemplateNamePosition,isForwardDeclaration,link,linkAt,move,next,scopeInfo,simpleMatch,str,strAt,syntaxError,tokAt] noreturn:[emplace_back,link,linkAt,next,syntaxError]
addInstantiation call:[begin,emplace_back,end,find,findClosingBracket,instantiation,next,simplifyTemplateArgs,tokAt] noreturn:[emplace_back]
getFunctionArguments call:[findClosingBracket,next,nextArgumentBeforeCreateLinks2,push_back,str,strAt,tokAt] noreturn:[push_back,tokAt]
areAllParamsTypes call:[Match,empty,previous]
getTemplateInstantiations call:[FindFullName,Match,addInstantiation,areAllParamsTypes,back,begin,deleteNext,empty,end,find,findClosingBracket,findTemplateDeclarationEnd,find_if,findsimplematch,front,fullName,getFunctionArguments,getSuffix,getTemplateNamePosition,getTemplateParametersInDeclaration,insert,insertToken,isFloat,isFunction,isInt,isLong,isUnsigned,lower_bound,make_pair,name,nameToken,next,num,previous,rfind,scope,scopeInfo,scopeName1,simpleMatch,size,str,strAt,string,substr,templateParameters,tokAt,tokType,token,upper_bound] noreturn:[addInstantiation,deleteNext,insert,insertToken,isLong,isUnsigned,str,substr,tokAt]
useDefaultArgumentValues call:[useDefaultArgumentValues] noreturn:[useDefaultArgumentValues]
useDefaultArgumentValues call:[FindName,FindToken,Match,back,begin,clear,createMutualLinks,deleteThis,empty,end,erase,eraseTokens,errmsg,find,findClosingBracket,find_if,fullName,insert,insertToken,isAlias,isFriend,isName,isSpecialization,link,locationList,name,next,originalName,paramEnd,pop,previous,push,push_back,resize,simpleMatch,simplifyTemplateArgs,size,str,strAt,templateParameters,tokAt,token,top,while] noreturn:[erase,errmsg,link,next,paramEnd,pop,push,push_back,resize,simplifyTemplateArgs]
simplifyTemplateAliases call:[FindToken,Match,addInstantiation,aliasEndToken,aliasStartToken,begin,copyTokens,deleteThis,deleteToken,emplace_back,end,erase,eraseTokens,find,findClosingBracket,find_if,front,fullName,getTemplateParametersInDeclaration,isAlias,isAliasToken,isName,isVariadic,link,next,previous,scope,size,str,tempOK,tokAt,token] noreturn:[addInstantiation,deleteThis,deleteToken,erase,eraseTokens,link,next]
instantiateMatch call:[Match,assert,findClosingBracket,next,strAt,templateParameters]
getTemplateNamePositionTemplateFunction call:[Match,findClosingBracket,isFunctionHead,linkAt,next,previous,simpleMatch,strAt,tokAt]
getTemplateNamePositionTemplateVariable call:[Match,findClosingBracket,linkAt,next,simpleMatch,tokAt]
getTemplateNamePositionTemplateClass call:[Match,findClosingBracket,next,strAt,tokAt,while] noreturn:[while]
getTemplateNamePosition call:[Match,assert,end,find,getTemplateNamePositionTemplateClass,getTemplateNamePositionTemplateFunction,getTemplateNamePositionTemplateVariable,str,tokAt]
addNamespace call:[Match,addtoken,back,column,fileIndex,find,insertToken,linenr,scope,str,strAt,substr,tokAt] noreturn:[addtoken,insertToken,str]
alreadyHasNamespace call:[c_str,find,scope,simpleMatch,size,tokAt] noreturn:[simpleMatch]
expandTemplate call:[FindToken,Match,addNamespace,addtoken,alreadyHasNamespace,assert,back,begin,c_str,column,createMutualLinks,deleteThis,emplace_back,empty,end,endStr,erase,eraseTokens,fileIndex,find,findClosingBracket,findTemplateDeclarationEnd,find_if,find_last_of,front,getTemplateNamePosition,getTemplateParametersInDeclaration,insert,insertToken,instantiateMatch,isClass,isFunction,isFunctionHead,isLong,isName,isNumber,isSigned,isSpecialization,isStandardType,isTemplateArg,isUnsigned,isVariable,isVariadic,linenr,link,linkAt,name,nameToken,newInstantiation,next,originalName,paramEnd,pattern,pop,previous,push,push_back,resize,rfind,scope,scopeInfo,simpleMatch,simplifyTemplateArgs,size,str,strAt,substr,templateParameters,tokAt,token,top] noreturn:[addNamespace,addtoken,assert,back,column,createMutualLinks,deleteThis,emplace_back,erase,eraseTokens,findClosingBracket,insertToken,isLong,isTemplateArg,link,next,pop,previous,push,push_back,simplifyTemplateArgs,str,strAt,tokAt]
newInstantiation
isLowerThanLogicalAnd call:[Match,isAssignmentOp] noreturn:[Match]
isLowerThanOr call:[isLowerThanLogicalAnd,str]
isLowerThanXor call:[isLowerThanOr,str]
isLowerThanAnd call:[isLowerThanXor,str]
isLowerThanShift call:[isLowerThanAnd,str]
isLowerThanPlusMinus call:[Match,isLowerThanShift] noreturn:[Match]
isLowerThanMulDiv call:[Match,isLowerThanPlusMinus] noreturn:[Match]
isLowerEqualThanMulDiv call:[Match,isLowerThanMulDiv] noreturn:[Match]
simplifyNumericCalculations call:[InternalError,Match,add,calculate,deleteNext,divide,isInt,isLowerEqualThanMulDiv,isLowerThanAnd,isLowerThanLogicalAnd,isLowerThanMulDiv,isLowerThanOr,isLowerThanPlusMinus,isLowerThanShift,isLowerThanXor,isNegative,isNullValue,isNumber,multiply,next,previous,str,subtract,tokAt,v1,v2] noreturn:[InternalError,str]
skipTernaryOp call:[Match,link,next,str] noreturn:[link]
simplifyTemplateArgs call:[Match,cmp,deleteNext,deleteThis,eraseTokens,findClosingBracket,front,getStrLength,insertToken,isBoolean,isInt,isNumber,link,linkAt,next,op1,op2,previous,simpleMatch,simplifyCalculations,sizeOfType,skipTernaryOp,str,strAt,templateParameters,toLongNumber,toString,tokAt] noreturn:[deleteNext,findClosingBracket,insertToken,link,linkAt,previous]
validTokenStart call:[previous] noreturn:[previous]
validTokenEnd call:[next] noreturn:[next]
simplifyCalculations call:[Match,back,cmp,deleteNext,deleteThis,eraseTokens,find,front,getSuffix,isBoolean,isFloat,isInt,isLong,isLowerThanLogicalAnd,isLowerThanMulDiv,isLowerThanXor,isName,isNumber,isSigned,isUnsigned,link,next,op1,op2,previous,simplifyNumericCalculations,str,strAt,toLongNumber,toString,tokAt,validTokenEnd,validTokenStart,varId] noreturn:[deleteNext,eraseTokens,front,isLong,isUnsigned,previous,str,tokAt]
getTemplateParametersInDeclaration call:[Match,assert,clear,findClosingBracket,link,next,previous,push_back,simpleMatch,str,strAt] noreturn:[link,next]
matchSpecialization call:[Match,begin,end,find,findClosingBracket,getTemplateParametersInDeclaration,isLong,isSigned,isUnsigned,next,previous,simpleMatch,size,str,tokAt] noreturn:[next,previous]
getNewName call:[Match,clear,emplace_back,empty,findClosingBracket,isLong,isSigned,isUnsigned,next,previous,push_back,str,strAt,templateParameters,tokAt] noreturn:[emplace_back,push_back,str]
simplifyTemplateInstantiations call:[ErrorMessage,Match,assert,callstack,clear,empty,errmsg,expandTemplate,findOpeningBracket,fullName,getFiles,getFunctionArguments,getNewName,getTemplateParametersInDeclaration,insert,instantiateMatch,isEnabled,isFunction,isSpecialization,isVariable,isVariadic,linkAt,matchSpecialization,name,nameToken,newFullName,newName,next,previous,progressValue,replaceTemplateUsage,reportErr,reportProgress,scope,simpleMatch,size,str,strAt,toString,tokAt,token,validateToken] noreturn:[previous,replaceTemplateUsage,reportErr,reportProgress,tokAt]
matchTemplateParameters call:[begin,end,findClosingBracket,isLong,isSigned,isUnsigned,next,str,tokAt]
replaceTemplateUsage call:[Match,back,begin,emplace_back,empty,end,erase,eraseTokens,findClosingBracket,front,fullName,isName,matchTemplateParameters,name,next,pop_back,previous,simpleMatch,size,str,templateSimplifierPointers,token] noreturn:[erase,pop_back]
specMatch call:[fullName,getFunctionArguments,isAlias,isFriend,isFunction,isPartialSpecialization,isSameFamily,isSpecialization,nameToken,size]
getSpecializations call:[isSpecialization,specMatch,token]
getPartialSpecializations call:[isPartialSpecialization,specMatch,token]
fixForwardDeclaredDefaultArgumentValues call:[Match,copyTokens,findClosingBracket,fullName,getTemplateParametersInDeclaration,isAlias,isFriend,isPartialSpecialization,nameToken,next,paramEnd,previous,size,strAt,tokAt,token] noreturn:[copyTokens,next,paramEnd,token]
printOut call:[aliasEndToken,aliasStartToken,fileLine,findClosingBracket,fullName,isAlias,isClass,isForwardDeclaration,isFriend,isFunction,isLong,isPartialSpecialization,isSigned,isSpecialization,isUnsigned,isVariable,isVariadic,name,nameToken,next,paramEnd,scope,str,strAt,token] noreturn:[fileLine,next]
printOut call:[isSpecialization,printOut,size,token] noreturn:[printOut]
simplifyTemplates call:[FindToken,Match,begin,c_str,calculateScopes,clear,createMutualLinks,deleteNext,deleteThis,empty,end,erase,eraseTokens,errmsg,find,findClosingBracket,find_if,fixForwardDeclaredDefaultArgumentValues,front,fullName,getFiles,getPartialSpecializations,getSpecializations,getTemplateDeclarations,getTemplateInstantiations,insertToken,isAlias,isFriend,isName,isSpecialization,link,linkAt,locationList,nameToken,next,previous,printOut,push_back,rbegin,removeTemplate,rend,reportErr,simpleMatch,simplifyTemplateAliases,simplifyTemplateInstantiations,simplifyUsing,skipRequires,str,title,to_string,tokAt,token,useDefaultArgumentValues] noreturn:[clear,deleteNext,deleteThis,erase,eraseTokens,insertToken,next,previous,printOut,push_back,removeTemplate,reportErr]
syntaxError call:[InternalError] noreturn:[InternalError]
intValue
clear
fill
setEnabledAll call:[clear,fill] noreturn:[clear,fill]
isEnabled call:[return]
enable
disable
setEnabled call:[disable,enable] noreturn:[disable,enable]
intValue
clear
fill
setEnabledAll call:[clear,fill] noreturn:[clear,fill]
isEnabled call:[return]
enable
disable
setEnabled call:[disable,enable] noreturn:[disable,enable]
intValue
clear
fill
setEnabledAll call:[clear,fill] noreturn:[clear,fill]
isEnabled call:[return]
enable
disable
setEnabled call:[disable,enable] noreturn:[disable,enable]
