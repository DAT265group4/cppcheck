isOk
upsideDown
useDrawChar
useTilingPatternFill
useShadedFills
useDrawForm
interpretType3Chars
setImageableArea
setOffset
setScale
setRotate
setClip
setUnderlayCbk
setOverlayCbk
PSFontInfo
PSFontFileInfo
PSFontFileInfo call:[gfree] noreturn:[gfree]
PSOutCustomColor
PSOutCustomColor
PSOutPaperSize
getKind
getChar call:[fillBuf,return]
lookChar call:[fillBuf,return]
getPSFilter
isBinary
isEncoder
DeviceNRecoder call:[getAlt,getColorSpace,getNComps,getTintTransformFunc] noreturn:[getTintTransformFunc]
DeviceNRecoder call:[isEncoder]
copy call:[error]
reset call:[ImageStream,getBits,getNumPixelComps,reset] noreturn:[reset]
close call:[close] noreturn:[close]
fillBuf call:[colToDbl,getColor,getColorSpace,getNComps,getPixel,transform] noreturn:[colToDbl]
getKind
getChar call:[fillBuf,return]
lookChar call:[fillBuf,return]
getPSFilter
isBinary
isEncoder
GrayRecoder call:[gmalloc]
GrayRecoder call:[gfree,isEncoder]
copy call:[error]
reset call:[ImageStream,getBits,getNumPixelComps,reset] noreturn:[reset]
close call:[close] noreturn:[close]
fillBuf call:[getGrayByteLine,getLine]
getKind
getChar call:[fillBuf,return]
lookChar call:[fillBuf,return]
getPSFilter
isBinary
isEncoder
ColorKeyToMaskEncoder call:[getNumPixelComps,gmalloc]
ColorKeyToMaskEncoder call:[gfree,isEncoder]
copy call:[error]
reset call:[ImageStream,getBits,getNumPixelComps,reset] noreturn:[reset]
close call:[close] noreturn:[close]
fillBuf call:[getLine]
outputToFile call:[fwrite] noreturn:[fwrite]
PSOutputDev call:[GHash,GList,error,fopen,init,strcmp] noreturn:[init]
PSOutputDev call:[GHash,GList,init] noreturn:[init]
init global:[psBase14SubstFonts] call:[GList,GString,PDFRectangle,PSFontFileInfo,PSOutPaperSize,add,append,ceil,get,getCatalog,getCropBox,getCropHeight,getCropWidth,getLength,getMediaBox,getMediaHeight,getMediaWidth,getNumPages,getPSImageableArea,getPSLevel,getPSPaperHeight,getPSPaperWidth,getPSPreload,getPSResidentFonts,getPSUseCropBoxAsPage,getPage,getRotate,getUserUnit,getXRef,lookup,writeDocSetup,writeHeader,writePS,writeXpdfProcset] noreturn:[add,append,ceil,getNumPages,getPSImageableArea,getUserUnit,writeHeader,writePS]
PSOutputDev call:[deleteGHash,deleteGList,fclose,gfree,writePS,writeTrailer] noreturn:[deleteGList,fclose,writePS]
checkIO call:[error,ferror]
writeHeader call:[ceil,dictLookup,floor,free,get,getDocInfo,getLength,getString,isDict,isString,writePS,writePSFmt,writePSTextLine] noreturn:[writePS,writePSFmt,writePSTextLine]
writeXpdfProcset global:[cmapProlog,minLineWidthProlog,prolog] call:[getPSMinLineWidth,writePS,writePSFmt] noreturn:[writePSFmt]
writeDocSetup call:[Annots,arrayGet,arrayGetLength,checkIfPageNeedsToBeRasterized,free,getAnnot,getAnnots,getCString,getDict,getField,getForm,getNumAnnots,getNumFields,getNumObjects,getPSDuplex,getPage,getResourceDict,getResources,gfree,gmalloc,isArray,isDict,isStream,lookup,memset,setupDefaultFont,setupResources,streamGetDict,writePS,writePSFmt] noreturn:[checkIfPageNeedsToBeRasterized,free,setupDefaultFont,setupResources,writePS,writePSFmt]
writePageTrailer call:[writePS] noreturn:[writePS]
writeTrailer call:[getCString,writePS,writePSFmt,writePSString] noreturn:[writePS,writePSString]
checkIfPageNeedsToBeRasterized call:[PreScanOutputDev,display,error,getCatalog,getPSAlwaysRasterize,getPSNeverRasterize,getPage,usesPatternImageMask,usesTransparency]
setupResources call:[dictGetLength,dictGetVal,dictGetValNF,dictLookup,free,getDict,getNumObjects,getRef,isDict,isRef,isStream,lookup,setupFonts,setupForms,setupImages,setupResources,streamGetDict] noreturn:[free,setupForms,setupResources]
setupFonts call:[GfxFontDict,fetch,free,getDict,getFont,getNumFonts,getRef,isDict,isRef,lookupNF,setupFont] noreturn:[GfxFontDict,free,setupFont]
setupFont global:[psBase14SubstFonts] call:[PSFontFileInfo,PSFontInfo,add,append,copy,decRefCnt,error,get,getCString,getCharName,getCollection,getHasEncoding,getID,getLength,getName,getType,getUnicodeMap,getWMode,getWidth,isCIDFont,locateFont,lookup,setupEmbeddedCIDTrueTypeFont,setupEmbeddedCIDType0Font,setupEmbeddedOpenTypeCFFFont,setupEmbeddedOpenTypeT1CFont,setupEmbeddedTrueTypeFont,setupEmbeddedType1CFont,setupEmbeddedType1Font,setupExternalCIDTrueTypeFont,setupExternalOpenTypeCFFFont,setupExternalTrueTypeFont,setupExternalType1Font,setupType3Font,sprintf,writePS,writePSFmt,writePSName] noreturn:[add,decRefCnt,error,getCharName,getWidth,setupType3Font,writePS,writePSFmt]
setupEmbeddedType1Font call:[GString,PSFontFileInfo,add,append,copy,error,fetch,fixType1Font,free,getCString,getEmbeddedFontName,getInt,getLength,getType,initRef,isInt,isStream,lookup,makePSFontName,renameType1Font,sizeof,streamClose,streamGetBlock,streamGetDict,streamReset,writePS,writePSBlock,writePSFmt] noreturn:[append,copy,makePSFontName,renameType1Font]
setupExternalType1Font call:[PSFontFileInfo,add,append,copy,error,fclose,fgetc,fopen,getCString,getID,getName,getType,lookup,makePSFontName,writePS,writePSChar,writePSFmt] noreturn:[copy,fgetc,makePSFontName,writePSChar]
setupEmbeddedType1CFont call:[PSFontFileInfo,add,append,convertToType1,getCString,getNext,getType,gfree,killIter,make,makePSFontName,readEmbFontFile,startIter,writePS,writePSFmt] noreturn:[gfree]
setupEmbeddedOpenTypeT1CFont call:[PSFontFileInfo,add,append,convertToType1,getCString,getNext,getType,gfree,isOpenTypeCFF,killIter,make,makePSFontName,readEmbFontFile,startIter,writePS,writePSFmt] noreturn:[convertToType1,gfree]
setupEmbeddedTrueTypeFont call:[PSFontFileInfo,add,append,convertToType42,getCString,getCodeToGIDMap,getEncoding,getHasEncoding,getNext,getType,gfree,killIter,make,makePSFontName,memcmp,readEmbFontFile,sizeof,startIter,writePS,writePSFmt]
setupExternalTrueTypeFont call:[PSFontFileInfo,add,append,cmp,convertToType42,copy,getCString,getCodeToGIDMap,getEncoding,getHasEncoding,getID,getNext,getType,gfree,killIter,load,makePSFontName,memcmp,sizeof,startIter,writePS,writePSFmt]
setupEmbeddedCIDType0Font call:[PSFontFileInfo,add,append,convertToCIDType0,convertToType0,getCIDToGID,getCIDToGIDLen,getCString,getNext,getPSLevel,getType,gfree,killIter,make,makePSFontName,readEmbFontFile,startIter,writePS,writePSFmt] noreturn:[convertToCIDType0,convertToType0,gfree]
setupEmbeddedCIDTrueTypeFont call:[PSFontFileInfo,add,append,convertToCIDType2,convertToType0,getCIDToGID,getCIDToGIDLen,getCString,getNext,getPSLevel,getType,gfree,gmallocn,killIter,make,makePSFontName,memcmp,memcpy,readEmbFontFile,sizeof,startIter,writePS,writePSFmt] noreturn:[convertToCIDType2,convertToType0,gfree]
setupExternalCIDTrueTypeFont call:[PSFontFileInfo,add,append,cmp,convertToCIDType2,convertToType0,copy,decRefCnt,error,getCString,getCmapEncoding,getCmapPlatform,getEmbeddingRights,getID,getLength,getName,getNext,getNumCmaps,getPSLevel,getToUnicode,getType,gfree,gmallocn,isIdentity,killIter,load,makePSFontName,mapCodeToGID,mapToUnicode,memcmp,sizeof,startIter,writePS,writePSFmt] noreturn:[convertToCIDType2,convertToType0,getLength,mapCodeToGID]
setupEmbeddedOpenTypeCFFFont call:[PSFontFileInfo,add,append,convertToCIDType0,convertToType0,getCIDToGID,getCIDToGIDLen,getCString,getNext,getPSLevel,getType,gfree,gmallocn,isOpenTypeCFF,killIter,make,makePSFontName,memcpy,readEmbFontFile,sizeof,startIter,writePS,writePSFmt] noreturn:[convertToCIDType0,convertToType0,gfree]
setupExternalOpenTypeCFFFont call:[PSFontFileInfo,add,append,cmp,convertToCIDType0,convertToType0,copy,decRefCnt,error,getCString,getCmapEncoding,getCmapPlatform,getID,getLength,getName,getNext,getNumCmaps,getPSLevel,getToUnicode,getType,gfree,gmallocn,isIdentity,isOpenTypeCFF,killIter,load,makePSFontName,mapCodeToGID,mapToUnicode,memcmp,sizeof,startIter,writePS,writePSFmt] noreturn:[convertToCIDType0,convertToType0,getLength,mapCodeToGID]
setupType3Font call:[Gfx,PSFontFileInfo,add,append,display,format,free,getCString,getCharProcs,getFontBBox,getFontMatrix,getID,getKey,getLength,getResources,getType,getValNF,setupResources,writePS,writePSFmt,writePSName] noreturn:[format,writePS]
makePSFontName call:[append,filterPSName,format,getEmbeddedFontName,getName,lookup]
fixType1Font call:[GString,append,asciiHexDecodeType1EexecSection,copyType1PFA,copyType1PFB,fixType1EexecSection,getCString,getLength,splitType1PFA,splitType1PFB] noreturn:[append,copyType1PFA,copyType1PFB]
splitType1PFA call:[append,memcmp]
splitType1PFB call:[append,del,getCString,getLength,memcmp] noreturn:[del]
asciiHexDecodeType1EexecSection call:[GString,append,getChar,getLength]
fixType1EexecSection call:[append,del,getChar,getLength,memcmp] noreturn:[append,del]
copyType1PFA call:[GString,append,error]
copyType1PFB call:[GString,append,error] noreturn:[append]
renameType1Font call:[del,getCString,insert,strstr] noreturn:[insert]
setupDefaultFont call:[writePS] noreturn:[writePS]
setupImages call:[dictGetLength,dictGetVal,dictGetValNF,error,free,getArray,getRef,getStream,greallocn,isArray,isDict,isName,isRef,isStream,lookup,setupImage,sizeof,streamGetDict] noreturn:[error,free,greallocn,setupImage]
setupImage call:[ASCII85Encoder,ASCIIHexEncoder,ColorKeyToMaskEncoder,DeviceNRecoder,GfxImageColorMap,GrayRecoder,LZWEncoder,RunLengthEncoder,close,create,error,free,get,getBool,getChar,getColorSpace,getDict,getImageParams,getInt,getLength,getMode,getPSASCIIHex,getPSFilter,getPSLZW,getPSUncompressPreloadedImages,getUndecodedStream,isBool,isInt,isNull,lookup,memset,parse,reset,sizeof,while,writePS,writePSChar,writePSFmt] noreturn:[ASCII85Encoder,ASCIIHexEncoder,ColorKeyToMaskEncoder,DeviceNRecoder,GrayRecoder,LZWEncoder,RunLengthEncoder,create,free,getBool,getChar,getInt,getPSASCIIHex,getUndecodedStream,parse,writePS,writePSFmt]
setupForms call:[dictGetLength,dictGetVal,dictGetValNF,error,free,isDict,isName,isRef,isStream,lookup,setupForm,streamGetDict] noreturn:[error,free,setupForm]
setupForm call:[Gfx,arrayGet,display,error,free,getDict,getNum,getRef,getRefGen,getRefNum,greallocn,isArray,isDict,lookup,sizeof,streamGetDict,writePS,writePSFmt] noreturn:[free,greallocn]
checkPageSlice call:[error,getNum]
startPage call:[ceil,floor,getCString,getCatalog,getCropHeight,getCropWidth,getMediaHeight,getMediaWidth,getPSCenter,getPSExpandSmaller,getPSShrinkLarger,getPSUseCropBoxAsPage,getPage,getRotate,getUserUnit,getX1,getX2,getY1,getY2,saveState,writePS,writePSFmt] noreturn:[ceil,getUserUnit,saveState,writePS,writePSFmt]
endPage call:[restoreState,writePS,writePageTrailer] noreturn:[writePS]
saveState call:[append,writePS] noreturn:[append]
restoreState call:[del,getLength,writePS]
updateCTM call:[fabs,writePSFmt] noreturn:[writePSFmt]
updateLineDash call:[getLineDash,writePS,writePSFmt] noreturn:[writePSFmt]
updateFlatness call:[getFlatness,writePSFmt]
updateLineJoin call:[getLineJoin,writePSFmt]
updateLineCap call:[getLineCap,writePSFmt]
updateMiterLimit call:[getMiterLimit,writePSFmt]
updateLineWidth call:[getLineWidth,writePSFmt]
updateFillColorSpace call:[dumpColorSpaceL2,getFillColorSpace,getMode,writePS]
updateStrokeColorSpace call:[dumpColorSpaceL2,getMode,getStrokeColorSpace,writePS]
updateFillColor call:[addCustomColor,addProcessColor,colToDbl,getCMYK,getFillCMYK,getFillColor,getFillColorSpace,getFillGray,getMode,getNComps,getName,getRenderingIntent,writePS,writePSFmt] noreturn:[addCustomColor,addProcessColor,writePS,writePSFmt]
updateStrokeColor call:[addCustomColor,addProcessColor,colToDbl,getCMYK,getMode,getNComps,getName,getRenderingIntent,getStrokeCMYK,getStrokeColor,getStrokeColorSpace,getStrokeGray,writePS,writePSFmt] noreturn:[addCustomColor,addProcessColor,writePS,writePSFmt]
addProcessColor
addCustomColor call:[PSOutCustomColor,cmp,colToDbl,copy,getCMYK,getName,getRenderingIntent]
addCustomColors call:[PSOutCustomColor,cmp,colToDbl,copy,getCMYK,getColorantName,getNComps,getRenderingIntent]
updateFillOverprint call:[getFillOverprint,writePSFmt]
updateStrokeOverprint call:[getStrokeOverprint,writePSFmt]
updateOverprintMode call:[getOverprintMode,writePSFmt]
updateTransfer call:[cvtFunction,getTransfer,writePS] noreturn:[cvtFunction,writePS]
updateFont call:[cmp,fabs,getFont,getFontSize,getID,getTag,writePSFmt] noreturn:[writePSFmt]
updateTextMat call:[fabs,getTextMat,writePSFmt] noreturn:[writePSFmt]
updateCharSpace call:[getCharSpace,writePSFmt]
updateRender call:[getRender,writePSFmt]
updateRise call:[getRise,writePSFmt]
updateWordSpace call:[getWordSpace,writePSFmt]
updateHorizScaling call:[fabs,getHorizScaling,writePSFmt]
updateTextPos call:[getLineX,getLineY,writePSFmt]
updateTextShift call:[getFont,getWMode,writePSFmt] noreturn:[writePSFmt]
saveTextPos call:[writePS]
restoreTextPos call:[writePS]
stroke call:[doPath,getPath,writePS] noreturn:[writePS]
fill call:[doPath,getPath,writePS]
eoFill call:[doPath,getPath,writePS]
tilingPatternFill call:[tilingPatternFillL1,tilingPatternFillL2] noreturn:[tilingPatternFillL1,tilingPatternFillL2]
tilingPatternFillL1 call:[Gfx,display,takeContentStreamStack,writePS,writePSFmt] noreturn:[writePS,writePSFmt]
tilingPatternFillL2 call:[Gfx,display,takeContentStreamStack,writePS,writePSFmt] noreturn:[writePS]
functionShadedFill call:[cvtFunction,getColorSpace,getDomain,getFunc,getMatrix,getMode,getNComps,getNFuncs,writePS,writePSFmt] noreturn:[writePS]
axialShadedFill call:[cvtFunction,fabs,getColorSpace,getCoords,getDomain0,getDomain1,getExtend0,getExtend1,getFunc,getMode,getNComps,getNFuncs,getUserClipBBox,writePS,writePSFmt] noreturn:[writePS]
radialShadedFill call:[asin,atan2,cvtFunction,fabs,getColorSpace,getCoords,getDomain0,getDomain1,getExtend0,getExtend1,getFunc,getMode,getNComps,getNFuncs,getUserClipBBox,sqrt,writePS,writePSFmt] noreturn:[asin,writePS,writePSFmt]
clip call:[doPath,getPath,writePS]
eoClip call:[doPath,getPath,writePS]
clipToStrokePath call:[doPath,getPath,writePS]
doPath call:[fabs,getCurve,getNumPoints,getNumSubpaths,getSubpath,getX,getY,isClosed,writePS,writePSFmt] noreturn:[writePS]
drawString call:[GString,append,decRefCnt,get,getCString,getCharSpace,getFont,getFontSize,getHorizScaling,getID,getLength,getNextChar,getRender,getType,getUnicodeMap,getWMode,getWordSpace,gfree,gmallocn,greallocn,isCIDFont,mapUnicode,sizeof,textTransformDelta,while,writePS,writePSFmt,writePSString] noreturn:[append,decRefCnt,getUnicodeMap,getWordSpace,greallocn,writePS,writePSFmt]
endTextObject call:[writePS]
drawImageMask call:[doImageL1,doImageL2,doImageL3]
drawImage call:[doImageL1,doImageL1Sep,doImageL2,doImageL3,getBits,getNumPixelComps]
drawMaskedImage call:[doImageL1,doImageL1Sep,doImageL2,doImageL3,getBits,getNumPixelComps]
doImageL1 call:[ASCIIHexEncoder,FixedLengthEncoder,ImageStream,close,colToByte,getBits,getChar,getGray,getNumPixelComps,getPixel,getRefGen,getRefNum,getRenderingIntent,reset,while,writePS,writePSChar,writePSFmt] noreturn:[close,getChar,writePSChar,writePSFmt]
doImageL1Sep call:[ImageStream,addProcessColor,close,colToByte,colToDbl,getBits,getCMYK,getNumPixelComps,getPixel,getRenderingIntent,gfree,gmallocn,reset,writePSChar,writePSFmt] noreturn:[addProcessColor,gfree,writePSChar]
doImageL2 call:[ASCII85Encoder,ASCIIHexEncoder,DeviceNRecoder,FixedLengthEncoder,GrayRecoder,LZWEncoder,RunLengthEncoder,close,colToDbl,convertColorKeyMaskToClipRects,convertExplicitMaskToClipRects,dumpColorSpaceL2,getAlt,getBits,getBlock,getCMYK,getCString,getChar,getColorSpace,getDecodeHigh,getDecodeLow,getMode,getNComps,getName,getNumPixelComps,getPSASCIIHex,getPSFilter,getPSLZW,getPSUncompressPreloadedImages,getRefGen,getRefNum,getRenderingIntent,getUndecodedStream,isBinary,reset,sizeof,while,writePS,writePSBlock,writePSChar,writePSFmt] noreturn:[ASCII85Encoder,ASCIIHexEncoder,DeviceNRecoder,FixedLengthEncoder,GrayRecoder,LZWEncoder,RunLengthEncoder,convertColorKeyMaskToClipRects,convertExplicitMaskToClipRects,getChar,getUndecodedStream,writePS,writePSBlock,writePSFmt]
convertColorKeyMaskToClipRects call:[ImageStream,close,getBits,getLine,getNumPixelComps,gfree,gmallocn,greallocn,reset,sizeof,writePS,writePSFmt] noreturn:[close,greallocn,writePSFmt]
convertExplicitMaskToClipRects call:[ImageStream,close,getLine,gfree,gmallocn,greallocn,reset,sizeof,writePS,writePSFmt] noreturn:[close,greallocn,writePSFmt]
doImageL3 call:[ASCII85Encoder,ASCIIHexEncoder,ColorKeyToMaskEncoder,FixedLengthEncoder,GString,GrayRecoder,LZWEncoder,RunLengthEncoder,append,appendf,close,colToDbl,dumpColorSpaceL2,getBits,getBlock,getCMYK,getCString,getChar,getColorSpace,getDecodeHigh,getDecodeLow,getMode,getName,getNumPixelComps,getPSASCIIHex,getPSFilter,getPSLZW,getPSUncompressPreloadedImages,getRefGen,getRefNum,getRenderingIntent,getUndecodedStream,isBinary,reset,sizeof,while,writePS,writePSBlock,writePSChar,writePSFmt] noreturn:[ASCII85Encoder,ASCIIHexEncoder,ColorKeyToMaskEncoder,FixedLengthEncoder,GrayRecoder,LZWEncoder,RunLengthEncoder,append,appendf,getChar,getUndecodedStream,writePS,writePSBlock,writePSFmt]
dumpColorSpaceL2 call:[dumpCalGrayColorSpace,dumpCalRGBColorSpace,dumpDeviceCMYKColorSpace,dumpDeviceGrayColorSpace,dumpDeviceNColorSpaceL2,dumpDeviceNColorSpaceL3,dumpDeviceRGBColorSpace,dumpICCBasedColorSpace,dumpIndexedColorSpace,dumpLabColorSpace,dumpSeparationColorSpace,getMode] noreturn:[dumpDeviceNColorSpaceL2,dumpDeviceNColorSpaceL3]
dumpDeviceGrayColorSpace call:[writePS] noreturn:[writePS]
dumpCalGrayColorSpace call:[getBlackX,getBlackY,getBlackZ,getGamma,getWhiteX,getWhiteY,getWhiteZ,writePS,writePSFmt] noreturn:[writePS]
dumpDeviceRGBColorSpace call:[writePS] noreturn:[writePS]
dumpCalRGBColorSpace call:[getBlackX,getBlackY,getBlackZ,getGammaB,getGammaG,getGammaR,getMatrix,getWhiteX,getWhiteY,getWhiteZ,writePS,writePSFmt] noreturn:[writePS]
dumpDeviceCMYKColorSpace call:[writePS] noreturn:[writePS]
dumpLabColorSpace call:[getAMax,getAMin,getBMax,getBMin,getBlackX,getBlackY,getBlackZ,getWhiteX,getWhiteY,getWhiteZ,writePS,writePSFmt] noreturn:[writePS,writePSFmt]
dumpICCBasedColorSpace call:[dumpColorSpaceL2,getAlt] noreturn:[dumpColorSpaceL2]
dumpIndexedColorSpace call:[addProcessColor,colToDbl,dblToCol,dumpColorSpaceL2,getAMax,getAMin,getAlt,getBMax,getBMin,getBase,getCMYK,getDefaultRanges,getIndexHigh,getLookup,getMode,getNComps,getRenderingIntent,getTintTransformFunc,transform,writePS,writePSFmt] noreturn:[addProcessColor,getAlt,writePS,writePSFmt]
dumpSeparationColorSpace call:[addCustomColor,cvtFunction,dumpColorSpaceL2,getAlt,getFunc,getName,writePS,writePSString] noreturn:[addCustomColor,writePS]
dumpDeviceNColorSpaceL2 call:[cvtFunction,dumpColorSpaceL2,getAlt,getTintTransformFunc,writePS] noreturn:[cvtFunction]
dumpDeviceNColorSpaceL3 call:[addCustomColors,createDeviceNTintFunc,cvtFunction,dumpColorSpaceL2,getAlt,getCString,getColorantName,getNComps,getTintTransformFunc,writePS,writePSString] noreturn:[addCustomColors,cvtFunction,writePS]
createDeviceNTintFunc call:[GString,append,appendf,arrayGet,arrayGetLength,cmp,dictLookup,free,getAttrs,getCString,getColorantName,getInputSize,getNComps,getOutputSize,isArray,isDict,isName,parse,transform] noreturn:[append,free]
type3D0 call:[writePS,writePSFmt]
type3D1 call:[GString,error,writePS]
drawForm call:[writePSFmt]
psXObject call:[close,getBlock,reset,sizeof,writePSBlock] noreturn:[writePSBlock]
cvtFunction call:[cvtFunction,getBounds,getC0,getC1,getCString,getCodeString,getDecodeMax,getDecodeMin,getDomainMax,getDomainMin,getE,getEncode,getEncodeMax,getEncodeMin,getFunc,getHasRange,getInputSize,getNumFuncs,getOutputSize,getRangeMax,getRangeMin,getSampleSize,getSamples,getScale,getType,writePS,writePSFmt] noreturn:[getSampleSize,writePS,writePSFmt]
writePSChar call:[append] noreturn:[append]
writePSBlock call:[append] noreturn:[append]
writePS call:[append,strlen] noreturn:[append]
writePSFmt call:[appendfv,formatv,getCString,getLength,va_end,va_start] noreturn:[appendfv,va_end]
writePSString call:[getCString,getLength,sprintf,writePS,writePSChar] noreturn:[writePSChar]
writePSName call:[writePSChar,writePSFmt] noreturn:[writePSChar,writePSFmt]
filterPSName call:[GString,append,getChar,getLength,sprintf] noreturn:[append]
writePSTextLine call:[TextString,getLength,getUnicode,writePS,writePSChar,writePSFmt]
