CWE
Check
Check call:[instances,remove] noreturn:[remove]
name
FileInfo
FileInfo
toString call:[string] noreturn:[string]
getFileInfo
loadFileInfoFromXml
analyseWholeProgram
reportError call:[CWE,reportError] noreturn:[reportError]
reportError call:[callstack,reportError] noreturn:[reportError]
reportError call:[CWE,reportError] noreturn:[reportError]
isInt
isFloat
getDoubleValue call:[isFloat]
toString call:[str] noreturn:[str]
operator()
operator()
contains call:[begin,end,find] noreturn:[end]
contains call:[begin,end,find] noreturn:[end]
contains call:[begin,end,find] noreturn:[end]
operator()
endsWith call:[back,empty]
endsWith call:[compare,return,size]
endsWith call:[endsWith] noreturn:[endsWith]
isPrefixStringCharLiteral call:[compare,endsWith,length,size]
isStringCharLiteral call:[isPrefixStringCharLiteral]
isStringLiteral call:[isStringCharLiteral] noreturn:[isStringCharLiteral]
isCharLiteral call:[isStringCharLiteral] noreturn:[isStringCharLiteral]
getStringCharLiteral call:[find,size,substr] noreturn:[substr]
getStringLiteral call:[getStringCharLiteral,isStringLiteral] noreturn:[getStringCharLiteral]
getCharLiteral call:[getStringCharLiteral,isCharLiteral] noreturn:[getStringCharLiteral]
getOrdinalText
FwdAnalysis
Result
Result
operator()
operator()
operator()
operator() call:[abs]
operator()
Value
equalValue call:[sameToken]
visitValue call:[f]
operator() call:[compare] noreturn:[compare]
operator() call:[bind,move,ref,visitValue] noreturn:[visitValue]
compareValue call:[assert,bind,isSymbolicValue,move,ref,sameToken,visitValue]
operator== call:[equalValue]
operator!=
equalTo call:[bind,ref,visitValue]
decreaseRange call:[visitValue] noreturn:[visitValue]
invertBound
invertRange call:[decreaseRange,invertBound] noreturn:[decreaseRange]
isIntValue
isTokValue
isFloatValue
isMovedValue
isUninitValue
isContainerSizeValue
isLifetimeValue
isBufferSizeValue
isIteratorValue
isIteratorStartValue
isIteratorEndValue
isSymbolicValue
isLocalLifetimeValue
isArgumentLifetimeValue
isSubFunctionLifetimeValue
isNonValue call:[isLifetimeValue,isMovedValue,isUninitValue] noreturn:[isLifetimeValue]
setKnown
isKnown
setPossible
isPossible
isImpossible
setImpossible
setInconclusive
isInconclusive
changeKnownToPossible call:[isKnown]
errorSeverity
LifetimeToken
LifetimeToken
LifetimeToken
setAddressOf
setInconclusive
isClass call:[setFlag] noreturn:[setFlag]
isFunction call:[setFlag] noreturn:[setFlag]
isVariable call:[setFlag] noreturn:[setFlag]
isAlias call:[setFlag] noreturn:[setFlag]
isSpecialization call:[setFlag] noreturn:[setFlag]
isPartialSpecialization call:[setFlag] noreturn:[setFlag]
isForwardDeclaration call:[setFlag] noreturn:[setFlag]
isVariadic call:[setFlag] noreturn:[setFlag]
isFriend call:[setFlag] noreturn:[setFlag]
getFlag call:[return] noreturn:[return]
setFlag
operator==
token
token
scope
name
fullName
nameToken
paramEnd
paramEnd
isClass call:[getFlag] noreturn:[getFlag]
isFunction call:[getFlag] noreturn:[getFlag]
isVariable call:[getFlag] noreturn:[getFlag]
isAlias call:[getFlag] noreturn:[getFlag]
isSpecialization call:[getFlag] noreturn:[getFlag]
isPartialSpecialization call:[getFlag] noreturn:[getFlag]
isForwardDeclaration call:[getFlag] noreturn:[getFlag]
isVariadic call:[getFlag] noreturn:[getFlag]
isFriend call:[getFlag] noreturn:[getFlag]
isSameFamily call:[return]
ScopeInfo2
TokenImpl
str call:[update_property_info] noreturn:[update_property_info]
str
tokAt call:[tokAt]
linkAt call:[linkAt]
simpleMatch call:[simpleMatch] noreturn:[simpleMatch]
valueType
argumentType call:[Match,astParent] noreturn:[astParent]
tokType
tokType call:[setFlag] noreturn:[setFlag]
isKeyword
isName call:[getFlag] noreturn:[getFlag]
isNameOnly
isLiteral call:[getFlag] noreturn:[getFlag]
isNumber
isEnumerator
isOp call:[isAssignmentOp,isConstOp,return] noreturn:[return]
isConstOp call:[isArithmeticalOp,return] noreturn:[return]
isExtendedOp call:[isConstOp]
isArithmeticalOp
isComparisonOp
isAssignmentOp
isBoolean
isIncDecOp
isBinaryOp call:[astOperand1,astOperand2]
isUnaryOp call:[astOperand1,astOperand2]
flags
flags
isUnsigned call:[getFlag] noreturn:[getFlag]
isUnsigned call:[setFlag] noreturn:[setFlag]
isSigned call:[getFlag] noreturn:[getFlag]
isSigned call:[setFlag] noreturn:[setFlag]
isPointerCompare call:[getFlag] noreturn:[getFlag]
isPointerCompare call:[setFlag] noreturn:[setFlag]
isLong call:[getFlag] noreturn:[getFlag]
isLong call:[setFlag] noreturn:[setFlag]
isStandardType call:[getFlag] noreturn:[getFlag]
isStandardType call:[setFlag] noreturn:[setFlag]
isExpandedMacro call:[getFlag] noreturn:[getFlag]
isExpandedMacro call:[setFlag] noreturn:[setFlag]
isCast call:[getFlag] noreturn:[getFlag]
isCast call:[setFlag] noreturn:[setFlag]
isAttributeConstructor call:[getFlag] noreturn:[getFlag]
isAttributeConstructor call:[setFlag] noreturn:[setFlag]
isAttributeDestructor call:[getFlag] noreturn:[getFlag]
isAttributeDestructor call:[setFlag] noreturn:[setFlag]
isAttributeUnused call:[getFlag] noreturn:[getFlag]
isAttributeUnused call:[setFlag] noreturn:[setFlag]
isAttributeUsed call:[getFlag] noreturn:[getFlag]
isAttributeUsed call:[setFlag] noreturn:[setFlag]
isAttributePure call:[getFlag] noreturn:[getFlag]
isAttributePure call:[setFlag] noreturn:[setFlag]
isAttributeConst call:[getFlag] noreturn:[getFlag]
isAttributeConst call:[setFlag] noreturn:[setFlag]
isAttributeNoreturn call:[getFlag] noreturn:[getFlag]
isAttributeNoreturn call:[setFlag] noreturn:[setFlag]
isAttributeNothrow call:[getFlag] noreturn:[getFlag]
isAttributeNothrow call:[setFlag] noreturn:[setFlag]
isAttributePacked call:[getFlag] noreturn:[getFlag]
isAttributePacked call:[setFlag] noreturn:[setFlag]
isAttributeNodiscard call:[getFlag] noreturn:[getFlag]
isAttributeNodiscard call:[setFlag] noreturn:[setFlag]
isAttributeMaybeUnused call:[getFlag] noreturn:[getFlag]
isAttributeMaybeUnused call:[setFlag] noreturn:[setFlag]
setCppcheckAttribute call:[setCppcheckAttribute] noreturn:[setCppcheckAttribute]
getCppcheckAttribute call:[getCppcheckAttribute] noreturn:[getCppcheckAttribute]
hasCppcheckAttributes
isControlFlowKeyword call:[getFlag] noreturn:[getFlag]
isOperatorKeyword call:[getFlag] noreturn:[getFlag]
isOperatorKeyword call:[setFlag] noreturn:[setFlag]
isComplex call:[getFlag] noreturn:[getFlag]
isComplex call:[setFlag] noreturn:[setFlag]
isEnumType call:[getFlag] noreturn:[getFlag]
isEnumType call:[setFlag] noreturn:[setFlag]
isAtAddress call:[getFlag] noreturn:[getFlag]
isAtAddress call:[setFlag] noreturn:[setFlag]
isIncompleteVar call:[getFlag] noreturn:[getFlag]
isIncompleteVar call:[setFlag] noreturn:[setFlag]
isConstexpr call:[getFlag] noreturn:[getFlag]
isConstexpr call:[setFlag] noreturn:[setFlag]
isExternC call:[getFlag] noreturn:[getFlag]
isExternC call:[setFlag] noreturn:[setFlag]
isSplittedVarDeclComma call:[getFlag] noreturn:[getFlag]
isSplittedVarDeclComma call:[setFlag] noreturn:[setFlag]
isSplittedVarDeclEq call:[getFlag] noreturn:[getFlag]
isSplittedVarDeclEq call:[setFlag] noreturn:[setFlag]
isImplicitInt call:[getFlag] noreturn:[getFlag]
isImplicitInt call:[setFlag] noreturn:[setFlag]
isInline call:[getFlag] noreturn:[getFlag]
isInline call:[setFlag] noreturn:[setFlag]
isTemplate call:[getFlag] noreturn:[getFlag]
isTemplate call:[setFlag] noreturn:[setFlag]
isBitfield
bits
templateSimplifierPointers
templateSimplifierPointer call:[insert] noreturn:[insert]
setBits
isUtf8 call:[isPrefixStringCharLiteral,return] noreturn:[return]
isUtf16 call:[isPrefixStringCharLiteral,return] noreturn:[return]
isUtf32 call:[isPrefixStringCharLiteral,return] noreturn:[return]
isCChar call:[isPrefixStringCharLiteral,length,return] noreturn:[return]
isCMultiChar call:[isPrefixStringCharLiteral,length,return] noreturn:[return]
isTemplateArg call:[getFlag] noreturn:[getFlag]
isTemplateArg call:[setFlag] noreturn:[setFlag]
findsimplematch call:[findsimplematch] noreturn:[findsimplematch]
findsimplematch call:[findsimplematch] noreturn:[findsimplematch]
findsimplematch call:[findsimplematch] noreturn:[findsimplematch]
findsimplematch call:[findsimplematch]
findsimplematch call:[findsimplematch] noreturn:[findsimplematch]
findsimplematch call:[findsimplematch]
findmatch call:[findmatch]
findmatch call:[findmatch]
fileIndex
fileIndex
linenr
linenr
column
column
next
previous
varId
varId call:[isStandardType,tokType,update_property_info] noreturn:[isStandardType,update_property_info]
exprId
exprId
forDebug
forDebugVarId call:[forDebug]
forDebugExprId call:[forDebug]
forPrintOut call:[forDebug]
link call:[update_property_info] noreturn:[update_property_info]
link
scope
scope
function
variable call:[tokType] noreturn:[tokType]
variable
type
enumerator
enumerator call:[tokType] noreturn:[tokType]
progressValue
originalName global:[emptyString]
values
originalName call:[string] noreturn:[string]
getKnownIntValue call:[front]
removeValues call:[remove_if] noreturn:[remove_if]
index
next
previous
getFlag call:[return] noreturn:[return]
setFlag
astOperand1
astOperand1
astOperand2
astOperand2
astParent
astParent
astSibling call:[astOperand1,astOperand2,astParent] noreturn:[astOperand1,astOperand2]
astSibling call:[astOperand1,astOperand2,astParent] noreturn:[astOperand1,astOperand2]
astTop
astTop
clearAst
clearValueFlow
astString call:[astString] noreturn:[astString]
setCpp11init
isCpp11init
setSettings
getSettings
isC
isCPP
front
front
back
back
getFiles
find call:[find] noreturn:[find]
end call:[end] noreturn:[end]
map
getVarId
setTimerResults
isC call:[isC] noreturn:[isC]
isCPP call:[isCPP] noreturn:[isCPP]
setPreprocessor
getPreprocessor
codeWithTemplates
setSettings call:[setSettings] noreturn:[setSettings]
getSymbolDatabase
varIdCount
tokens call:[front] noreturn:[front]
isMaxTime
getSettings
newVarId
CheckMemoryLeak
CheckMemoryLeakInFunction
CheckMemoryLeakInFunction
runChecks call:[checkMemoryLeak,checkReallocUsage] noreturn:[checkReallocUsage]
getErrorMessages call:[c,deallocDeallocError,deallocuseError,memleakError,memleakUponReallocFailureError,mismatchAllocDealloc,mismatchSizeError,resourceLeakError] noreturn:[memleakUponReallocFailureError]
myName
classInfo
CheckMemoryLeakInClass
CheckMemoryLeakInClass
runChecks call:[check,checkMemoryLeak,isCPP] noreturn:[check]
getErrorMessages call:[c,publicAllocationError,unsafeClassError] noreturn:[unsafeClassError]
myName
classInfo
CheckMemoryLeakStructMember
CheckMemoryLeakStructMember
runChecks call:[check,checkMemoryLeak] noreturn:[check]
getErrorMessages
myName
classInfo
CheckMemoryLeakNoVar
CheckMemoryLeakNoVar
runChecks call:[check,checkMemoryLeak] noreturn:[check]
getErrorMessages call:[c,functionCallLeak,returnValueNotUsedError,unsafeArgAllocError] noreturn:[unsafeArgAllocError]
myName
classInfo
min_value
max_value call:[return]
Platform
isIntValue call:[max_value,min_value] noreturn:[max_value]
isIntValue call:[max_value]
isLongValue call:[max_value,min_value] noreturn:[max_value]
isLongValue call:[max_value]
isLongLongValue call:[max_value]
isWindowsPlatform
platformString call:[platformString] noreturn:[platformString]
platformString
unsignedCharMax call:[max_value] noreturn:[max_value]
signedCharMax call:[max_value] noreturn:[max_value]
signedCharMin call:[min_value] noreturn:[min_value]
operator() call:[caseInsensitiveStringCompare]
FileSettings
cppcheckDefines
Standards
setC
getC
setCPP
getCPP
Error
Error
Error
getAllocFuncInfo call:[getAllocDealloc] noreturn:[getAllocDealloc]
getDeallocFuncInfo call:[getAllocDealloc] noreturn:[getAllocDealloc]
allocId call:[getAllocDealloc]
deallocId call:[getAllocDealloc]
setalloc
setdealloc
setrealloc
setnoreturn
ismemory call:[return] noreturn:[return]
ismemory call:[return] noreturn:[return]
isresource call:[return] noreturn:[return]
isresource call:[return] noreturn:[return]
Container
getAction call:[end,find]
getYield call:[end,find]
ArgumentChecks
IteratorInfo
MinSize
Function
isboolargbad call:[getarg]
isargformatstr call:[getarg]
isargstrz call:[getarg]
validarg global:[emptyString] call:[getarg]
isInt call:[isInt] noreturn:[isInt]
getArgIteratorInfo call:[getarg]
argminsizes call:[getarg]
markupExtensions
isexporter call:[end,find] noreturn:[end]
isexportedprefix call:[end,find,isPrefix,return] noreturn:[return]
isexportedsuffix call:[end,find,isSuffix,return] noreturn:[return]
isreflection call:[end,find] noreturn:[end]
reflectionArgument call:[end,find]
podtype call:[end,find,return]
PlatformType
operator== call:[return] noreturn:[return]
operator!=
platform_type call:[end,find,return]
platform_type call:[end,find,platform_type,return]
addPrefix call:[insert] noreturn:[insert]
addSuffix call:[insert] noreturn:[insert]
isPrefix call:[end,find,return] noreturn:[return]
isSuffix call:[end,find,return] noreturn:[return]
CodeBlock
setStart
setEnd
setOffset
addBlock call:[insert] noreturn:[insert]
start
end
offset
isBlock call:[end,find] noreturn:[end]
getAllocDealloc call:[end,find,return]
getFileName
Suppression
Suppression
Suppression
operator=
operator<
isLocal call:[empty,find_first_of]
isSameParameters
TimerResultsIntf
TimerResultsData
seconds
TimerResults
Rule
SafeChecks
clear
configurationExcluded call:[compare,length]
posix call:[begin,end,find] noreturn:[end]
terminate
terminated
Dimension
BaseInfo
operator<
FriendInfo
Type call:[next,str,tokAt] noreturn:[next]
type global:[emptyString] call:[str]
isTypeAlias call:[str]
Enumerator
getFlag call:[return] noreturn:[return]
setFlag
Variable call:[evaluate] noreturn:[evaluate]
nameToken
typeStartToken
typeEndToken
name global:[emptyString] call:[str] noreturn:[str]
declarationId call:[varId] noreturn:[varId]
index
isPublic
isProtected
isPrivate
isGlobal
isNamespace
isArgument
isLocal call:[isExtern,return] noreturn:[isExtern]
isMutable call:[getFlag] noreturn:[getFlag]
isVolatile call:[getFlag] noreturn:[getFlag]
isStatic call:[getFlag] noreturn:[getFlag]
isExtern call:[getFlag] noreturn:[getFlag]
isConst call:[getFlag] noreturn:[getFlag]
isThrow
isClass call:[getFlag] noreturn:[getFlag]
isArray call:[getFlag] noreturn:[getFlag]
isPointer call:[getFlag] noreturn:[getFlag]
isPointerToArray call:[getFlag,isPointer] noreturn:[getFlag]
isArrayOrPointer call:[getFlag] noreturn:[getFlag]
isReference call:[getFlag] noreturn:[getFlag]
isRValueReference call:[getFlag] noreturn:[getFlag]
hasDefault call:[getFlag] noreturn:[getFlag]
isInit call:[getFlag] noreturn:[getFlag]
type
typeScope
scope
dimensions
dimension
dimensionKnown
isStlType call:[getFlag] noreturn:[getFlag]
isStlStringType call:[getFlag] noreturn:[getFlag]
isSmartPointer call:[getFlag] noreturn:[getFlag]
isStlType call:[isStlType,strAt] noreturn:[strAt]
isStlType call:[end,find,isStlType,strAt] noreturn:[end]
isFloatingType call:[getFlag] noreturn:[getFlag]
isEnumType call:[isEnumType,type] noreturn:[isEnumType]
isMaybeUnused call:[getFlag] noreturn:[getFlag]
valueType
accessControl
type
getFlag call:[return] noreturn:[return]
setFlag
name call:[str] noreturn:[str]
argCount call:[size] noreturn:[size]
minArgCount call:[size]
initializedArgCount
isLambda
isConstructor
isDestructor
isAttributeConstructor call:[isAttributeConstructor] noreturn:[isAttributeConstructor]
isAttributeDestructor call:[isAttributeDestructor] noreturn:[isAttributeDestructor]
isAttributePure call:[isAttributePure] noreturn:[isAttributePure]
isAttributeConst call:[isAttributeConst] noreturn:[isAttributeConst]
isAttributeNoreturn call:[isAttributeNoreturn] noreturn:[isAttributeNoreturn]
isAttributeNothrow call:[isAttributeNothrow] noreturn:[isAttributeNothrow]
isAttributeNodiscard call:[isAttributeNodiscard] noreturn:[isAttributeNodiscard]
hasBody call:[getFlag] noreturn:[getFlag]
isInline call:[getFlag] noreturn:[getFlag]
isConst call:[getFlag] noreturn:[getFlag]
hasVirtualSpecifier call:[getFlag] noreturn:[getFlag]
isPure call:[getFlag] noreturn:[getFlag]
isStatic call:[getFlag] noreturn:[getFlag]
isStaticLocal call:[getFlag] noreturn:[getFlag]
isExtern call:[getFlag] noreturn:[getFlag]
isFriend call:[getFlag] noreturn:[getFlag]
isExplicit call:[getFlag] noreturn:[getFlag]
isDefault call:[getFlag] noreturn:[getFlag]
isDelete call:[getFlag] noreturn:[getFlag]
isNoExcept call:[getFlag] noreturn:[getFlag]
isThrow call:[getFlag] noreturn:[getFlag]
hasOverrideSpecifier call:[getFlag] noreturn:[getFlag]
hasFinalSpecifier call:[getFlag] noreturn:[getFlag]
isOperator call:[getFlag] noreturn:[getFlag]
hasLvalRefQualifier call:[getFlag] noreturn:[getFlag]
hasRvalRefQualifier call:[getFlag] noreturn:[getFlag]
isVariadic call:[getFlag] noreturn:[getFlag]
isVolatile call:[getFlag] noreturn:[getFlag]
hasTrailingReturnType call:[getFlag] noreturn:[getFlag]
hasBody call:[setFlag] noreturn:[setFlag]
isInlineKeyword call:[getFlag] noreturn:[getFlag]
isEscapeFunction call:[getFlag] noreturn:[getFlag]
isEscapeFunction call:[setFlag] noreturn:[setFlag]
isConstexpr call:[getFlag] noreturn:[getFlag]
isConstexpr call:[setFlag] noreturn:[setFlag]
returnDefEnd call:[findmatch,hasTrailingReturnType] noreturn:[findmatch]
isInline call:[setFlag] noreturn:[setFlag]
isConst call:[setFlag] noreturn:[setFlag]
hasVirtualSpecifier call:[setFlag] noreturn:[setFlag]
isPure call:[setFlag] noreturn:[setFlag]
isStatic call:[setFlag] noreturn:[setFlag]
isStaticLocal call:[setFlag] noreturn:[setFlag]
isExtern call:[setFlag] noreturn:[setFlag]
isFriend call:[setFlag] noreturn:[setFlag]
isExplicit call:[setFlag] noreturn:[setFlag]
isDefault call:[setFlag] noreturn:[setFlag]
isDelete call:[setFlag] noreturn:[setFlag]
isNoExcept call:[setFlag] noreturn:[setFlag]
isThrow call:[setFlag] noreturn:[setFlag]
isOperator call:[setFlag] noreturn:[setFlag]
hasLvalRefQualifier call:[setFlag] noreturn:[setFlag]
hasRvalRefQualifier call:[setFlag] noreturn:[setFlag]
isVariadic call:[setFlag] noreturn:[setFlag]
isVolatile call:[setFlag] noreturn:[setFlag]
hasTrailingReturnType call:[setFlag] noreturn:[setFlag]
isInlineKeyword call:[setFlag] noreturn:[setFlag]
setBodyStartEnd call:[link,push_back] noreturn:[push_back]
isAnonymous call:[compare,isdigit,size] noreturn:[isdigit]
findEnumerator call:[str]
isNestedIn
nestedInFunction
isClassOrStruct call:[return] noreturn:[return]
isClassOrStructOrUnion call:[return] noreturn:[return]
isExecutable
isLoopScope
isLocal call:[return] noreturn:[return]
findRecordInNestedList call:[findRecordInNestedList]
findType call:[findType]
addFunction call:[back,insert,make_pair,push_back,str] noreturn:[insert]
ValueType
ValueType
ValueType
ValueType
isPrimitive call:[return] noreturn:[return]
isIntegral call:[return] noreturn:[return]
isFloat call:[return] noreturn:[return]
isEnum
findType call:[findType]
findScope call:[findScope]
isVarId call:[size] noreturn:[size]
getVariableFromVarId call:[at] noreturn:[at]
variableList
FileLocation
FileLocation
FileLocation
getinfo
setinfo
shortMessage
verboseMessage
symbolNames
ErrorLogger
ErrorLogger call:[close,is_open,plistFooter] noreturn:[close]
reportProgress
reportInfo call:[reportErr] noreturn:[reportErr]
plistFooter
assertEquals call:[assertEqualsFailed,str] noreturn:[assertEqualsFailed]
setVerbose
setMultiline
bughuntingReport
TestFixture
TestMemleak
run call:[open,prepareTest,setVerbose,testFunctionReturnType,while] noreturn:[open,testFunctionReturnType,while]
functionReturnType_ global:[errout] call:[assert_,c,front,getSymbolDatabase,istr,return,str,tokenize,tokenizer]
testFunctionReturnType call:[assertEquals,functionReturnType_]
open global:[errout] call:[assertEquals,assert_,check,findsimplematch,getAllocationType,istr,str,tokAt,tokenize,tokenizer,tokens]
TestMemleakInFunction
check_ global:[errout] call:[assert_,checkMemoryLeak,checkReallocUsage,istr,str,tokenize,tokenizer] noreturn:[checkReallocUsage]
run call:[c_str,complainMissingLib,load,prepareTest,realloc1,realloc10,realloc11,realloc12,realloc13,realloc14,realloc15,realloc16,realloc17,realloc18,realloc19,realloc2,realloc20,realloc21,realloc22,realloc23,realloc24,realloc3,realloc4,realloc5,realloc7,realloc8,realloc9,reallocarray1,setVerbose,while] noreturn:[realloc1,realloc10,realloc11,realloc12,realloc13,realloc14,realloc15,realloc16,realloc17,realloc18,realloc19,realloc2,realloc20,realloc21,realloc22,realloc23,realloc24,realloc3,realloc4,realloc5,realloc7,realloc8,realloc9,reallocarray1,while]
realloc1 global:[errout] call:[assertEquals,check_,str]
realloc2 global:[errout] call:[assertEquals,check_,str]
realloc3 global:[errout] call:[assertEquals,check_,str]
realloc4 global:[errout] call:[check_,str,todoAssertEquals] noreturn:[todoAssertEquals]
realloc5 global:[errout] call:[assertEquals,check_,str]
realloc7 global:[errout] call:[assertEquals,check_,str]
realloc8 global:[errout] call:[assertEquals,check_,str]
realloc9 global:[errout] call:[assertEquals,check_,str]
realloc10 global:[errout] call:[assertEquals,check_,str]
realloc11 global:[errout] call:[assertEquals,check_,str]
realloc12 global:[errout] call:[assertEquals,check_,str]
realloc13 global:[errout] call:[assertEquals,check_,str]
realloc14 global:[errout] call:[assertEquals,check_,str]
realloc15 global:[errout] call:[assertEquals,check_,str]
realloc16 global:[errout] call:[assertEquals,check_,str]
realloc17 global:[errout] call:[assertEquals,check_,str]
realloc18 global:[errout] call:[assertEquals,check_,str]
realloc19 global:[errout] call:[assertEquals,check_,str]
realloc20 global:[errout] call:[assertEquals,check_,str]
realloc21 global:[errout] call:[assertEquals,check_,str]
realloc22 global:[errout] call:[assertEquals,check_,str]
realloc23 global:[errout] call:[assertEquals,check_,str]
realloc24 global:[errout] call:[assertEquals,check_,str]
reallocarray1 global:[errout] call:[assertEquals,check_,str]
TestMemleakInClass
check_ global:[errout] call:[assert_,check,checkMemoryLeak,istr,str,tokenize,tokenizer] noreturn:[check]
run call:[c_str,class1,class10,class11,class12,class13,class14,class15,class16,class17,class18,class19,class2,class20,class21,class22,class23,class24,class25,class3,class4,class6,class7,class8,class9,complainMissingLib,enable,free_member_in_sub_func,func1,func2,load,mismatch1,mismatch2,prepareTest,setVerbose,staticvar,while] noreturn:[class1,class10,class11,class12,class13,class14,class15,class16,class17,class18,class19,class2,class20,class21,class22,class23,class24,class25,class3,class4,class6,class7,class8,class9,free_member_in_sub_func,func1,func2,mismatch1,mismatch2,staticvar,while]
class1 global:[errout] call:[assertEquals,check_,str]
class2 global:[errout] call:[assertEquals,check_,str]
class3 global:[errout] call:[assertEquals,check_,str]
class4 global:[errout] call:[assertEquals,check_,str]
class6 global:[errout] call:[assertEquals,check_,str]
class7 global:[errout] call:[assertEquals,check_,str]
class8 global:[errout] call:[assertEquals,check_,str]
class9 global:[errout] call:[assertEquals,check_,str]
class10 global:[errout] call:[assertEquals,check_,str]
class11 global:[errout] call:[assertEquals,check_,str]
class12 global:[errout] call:[assertEquals,check_,str]
class13 global:[errout] call:[assertEquals,check_,str]
class14 global:[errout] call:[assertEquals,check_,str]
class15 global:[errout] call:[assertEquals,check_,str]
class16 global:[errout] call:[assertEquals,check_,str]
class17 global:[errout] call:[assertEquals,check_,str]
class18 global:[errout] call:[assertEquals,check_,str]
class19 global:[errout] call:[assertEquals,check_,str]
class20 global:[errout] call:[assertEquals,check_,str]
class21 global:[errout] call:[check_,str,todoAssertEquals] noreturn:[todoAssertEquals]
class22 global:[errout] call:[assertEquals,check_,str]
class23 global:[errout] call:[assertEquals,check_,str]
class24 global:[errout] call:[assertEquals,check_,str]
class25 global:[errout] call:[assertEquals,check_,str]
staticvar global:[errout] call:[assertEquals,check_,str]
free_member_in_sub_func global:[errout] call:[assertEquals,check_,str]
mismatch1 global:[errout] call:[assertEquals,check_,str]
mismatch2 global:[errout] call:[assertEquals,check_,str]
func1 global:[errout] call:[assertEquals,check_,str]
func2 global:[errout] call:[assertEquals,check_,str]
TestMemleakStructMember
check_ global:[errout] call:[assert_,check,checkMemoryLeakStructMember,istr,str,tokenize,tokenizer] noreturn:[check]
run call:[assign1,assign2,assign3,c_str,complainMissingLib,customAllocation,err,failedAllocation,function1,function2,function3,function4,function5,globalvar,goto_,ifelse,lambdaInForLoop,linkedlist,load,localvars,prepareTest,refvar,ret1,ret2,setVerbose,trac5030,varid,varid_2,while] noreturn:[assign1,assign2,assign3,customAllocation,err,failedAllocation,function1,function2,function3,function4,function5,globalvar,goto_,ifelse,lambdaInForLoop,linkedlist,localvars,refvar,ret1,ret2,trac5030,varid,varid_2,while]
err global:[errout] call:[assertEquals,check_,str]
goto_ global:[errout] call:[assertEquals,check_,str]
ret1 global:[errout] call:[assertEquals,check_,str]
ret2 global:[errout] call:[assertEquals,check_,str]
assign1 global:[errout] call:[assertEquals,check_,str]
assign2 global:[errout] call:[assertEquals,check_,str]
assign3 global:[errout] call:[assertEquals,check_,str]
failedAllocation global:[errout] call:[assertEquals,check_,str]
function1 global:[errout] call:[assertEquals,check_,str]
function2 global:[errout] call:[assertEquals,check_,str]
function3 global:[errout] call:[assertEquals,check_,str]
function4 global:[errout] call:[assertEquals,check_,str]
function5 global:[errout] call:[assertEquals,check_,str]
ifelse global:[errout] call:[assertEquals,check_,str]
linkedlist global:[errout] call:[assertEquals,check_,str]
globalvar global:[errout] call:[assertEquals,check_,str]
localvars global:[errout] call:[assertEquals,check_,str]
refvar global:[errout] call:[assertEquals,check_,str]
trac5030 global:[errout] call:[assertEquals,check_,str]
varid global:[errout] call:[assertEquals,check_,str]
varid_2 global:[errout] call:[check_,str,todoAssertEquals] noreturn:[todoAssertEquals]
customAllocation global:[errout] call:[assertEquals,check_,str]
lambdaInForLoop global:[errout] call:[assertEquals,check_,str]
TestMemleakNoVar
check_ global:[errout] call:[assert_,check,checkMemoryLeakNoVar,istr,str,tokenize,tokenizer] noreturn:[check]
run call:[c_str,complainMissingLib,emplace_back,enable,functionParameter,getAllocationType,load,missingAssignment,prepareTest,resourceLeak,setEnabled,setVerbose,smartPointerFunctionParam,while] noreturn:[functionParameter,getAllocationType,missingAssignment,resourceLeak,smartPointerFunctionParam,while]
functionParameter global:[errout] call:[assertEquals,check_,str,todoAssertEquals]
missingAssignment global:[errout] call:[assertEquals,check_,str,todoAssertEquals]
smartPointerFunctionParam global:[errout] call:[assertEquals,check_,str]
resourceLeak global:[errout] call:[assertEquals,check_,str]
getAllocationType global:[errout] call:[assertEquals,check_,str]
intValue
clear
fill
setEnabledAll call:[clear,fill] noreturn:[clear,fill]
isEnabled call:[return]
enable
disable
setEnabled call:[disable,enable] noreturn:[disable,enable]
intValue
clear
fill
setEnabledAll call:[clear,fill] noreturn:[clear,fill]
isEnabled call:[return]
enable
disable
setEnabled call:[disable,enable] noreturn:[disable,enable]
intValue
clear
fill
setEnabledAll call:[clear,fill] noreturn:[clear,fill]
isEnabled call:[return]
enable
disable
setEnabled call:[disable,enable] noreturn:[disable,enable]
